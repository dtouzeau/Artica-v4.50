<?php
if(preg_match("#--verbose#",implode(" ",$argv))){$GLOBALS["VERBOSE"]=true;ini_set('display_errors', 1);ini_set('error_reporting', E_ALL);ini_set('error_prepend_string',null);ini_set('error_append_string',null);}
if(!isset($GLOBALS["CLASS_SOCKETS"])){if(!class_exists("sockets")){include_once("/usr/share/artica-postfix/ressources/class.sockets.inc");}$GLOBALS["CLASS_SOCKETS"]=new sockets();}if(function_exists("posix_getuid")){if(posix_getuid()<>0){die("Cannot be used in web server mode\n\n");}}
if(preg_match("#schedule-id=([0-9]+)#",implode(" ",$argv),$re)){$GLOBALS["SCHEDULE_ID"]=$re[1];}
include_once(dirname(__FILE__)."/ressources/class.user.inc");
include_once(dirname(__FILE__)."/ressources/class.system.network.inc");
include_once(dirname(__FILE__)."/ressources/class.os.system.inc");
include_once(dirname(__FILE__)."/ressources/class.mysql.inc");
include_once(dirname(__FILE__)."/ressources/class.templates.inc");
include_once(dirname(__FILE__).'/framework/class.unix.inc');if(!isset($GLOBALS["CLASS_SOCKETS"])){if(!class_exists("sockets")){include_once("/usr/share/artica-postfix/ressources/class.sockets.inc");}$GLOBALS["CLASS_SOCKETS"]=new sockets();}
include_once(dirname(__FILE__).'/framework/frame.class.inc');
if($argv[1]=="--plugins"){setPlugins();exit;}
build();
function build(){
	$webappFile=null;
	$tomcatDir="/var/lib/tomcat6/webapps";
	if(!is_dir($tomcatDir)){
		echo "Starting......: ".date("H:i:s")." C.A.S server failed `$tomcatDir` no such directory...\n";
		return; 
	}
	$unix=new unix();
	$dirfiles=$unix->DirFiles("/usr/share/cas-server/modules","cas-server-webapp-.*?\.war");
	
	echo "Starting......: ".date("H:i:s")." C.A.S server checking libraries...\n";
	echo "Starting......: ".date("H:i:s")." C.A.S server TomCat webapps `$tomcatDir`\n";
	while (list ($num, $line) = each ($dirfiles)){
		$webappFile="/usr/share/cas-server/modules/$num";
	}
	
	if($webappFile==null){echo "Starting......: ".date("H:i:s")." C.A.S server failed to retrive cas-server-webapp war file\n";return;}
	if(is_file("$tomcatDir/cas.war")){@unlink("$tomcatDir/cas.war");}
	echo "Starting......: ".date("H:i:s")." C.A.S server installing $webappFile into $tomcatDir..\n";
	@link($webappFile, "$tomcatDir/cas.war");
	writesettings();
	maven2();
	tomcat_config();
	log4jxml();
	if(is_file("/etc/init.d/tomcat6")){
		echo "Starting......: ".date("H:i:s")." C.A.S server restarting tomcat server...\n";
		shell_exec("/etc/init.d/tomcat6 restart >/dev/null 2>&1");
	}
	WEB_INF_deployerConfigContext();
	log4jxml();
}

function WEB_INF_deployerConfigContext(){
	$ldap=new clladp();
	$f[]="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
	$f[]="";
	$f[]="<beans xmlns=\"http://www.springframework.org/schema/beans\"";
	$f[]="       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"";
	$f[]="       xmlns:p=\"http://www.springframework.org/schema/p\"";
	$f[]="       xmlns:tx=\"http://www.springframework.org/schema/tx\"";
	$f[]="       xmlns:sec=\"http://www.springframework.org/schema/security\"";
	$f[]="       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd";
	$f[]="       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd";
	$f[]="       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd\">";
	$f[]="	<bean id=\"authenticationManager\"";
	$f[]="		class=\"org.jasig.cas.authentication.AuthenticationManagerImpl\">";
	$f[]="		";
	$f[]="		<!-- Uncomment the metadata populator to allow clearpass to capture and cache the password";
	$f[]="		     This switch effectively will turn on clearpass.";
	$f[]="		<property name=\"authenticationMetaDataPopulators\">";
	$f[]="		   <list>";
	$f[]="		      <bean class=\"org.jasig.cas.extension.clearpass.CacheCredentialsMetaDataPopulator\">";
	$f[]="		         <constructor-arg index=\"0\" ref=\"credentialsCache\" />";
	$f[]="		      </bean>";
	$f[]="		   </list>";
	$f[]="		</property>";
	$f[]="		 -->";
	$f[]="		";
	$f[]="		<property name=\"credentialsToPrincipalResolvers\">";
	$f[]="			<list>";
	$f[]="				<!--";
	$f[]="					| UsernamePasswordCredentialsToPrincipalResolver supports the UsernamePasswordCredentials that we use for /login ";
	$f[]="					| by default and produces SimplePrincipal instances conveying the username from the credentials.";
	$f[]="					| ";
	$f[]="					| If you've changed your LoginFormAction to use credentials other than UsernamePasswordCredentials then you will also";
	$f[]="					| need to change this bean declaration (or add additional declarations) to declare a CredentialsToPrincipalResolver that supports the";
	$f[]="					| Credentials you are using.";
	$f[]="					+-->";
	$f[]="				<bean class=\"org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver\" >";
	$f[]="					<property name=\"attributeRepository\" ref=\"attributeRepository\" />";
	$f[]="				</bean>";
	$f[]="				<!--";
	$f[]="					| HttpBasedServiceCredentialsToPrincipalResolver supports HttpBasedCredentials.  It supports the CAS 2.0 approach of";
	$f[]="					| authenticating services by SSL callback, extracting the callback URL from the Credentials and representing it as a";
	$f[]="					| SimpleService identified by that callback URL.";
	$f[]="					|";
	$f[]="					| If you are representing services by something more or other than an HTTPS URL whereat they are able to";
	$f[]="					| receive a proxy callback, you will need to change this bean declaration (or add additional declarations).";
	$f[]="					+-->";
	$f[]="				<bean";
	$f[]="					class=\"org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver\" />";
	$f[]="			</list>";
	$f[]="		</property>";
	$f[]="";
	$f[]="		<!--";
	$f[]="			| Whereas CredentialsToPrincipalResolvers identify who it is some Credentials might authenticate, ";
	$f[]="			| AuthenticationHandlers actually authenticate credentials.  Here we declare the AuthenticationHandlers that";
	$f[]="			| authenticate the Principals that the CredentialsToPrincipalResolvers identified.  CAS will try these handlers in turn";
	$f[]="			| until it finds one that both supports the Credentials presented and succeeds in authenticating.";
	$f[]="			+-->";
	$f[]="		<property name=\"authenticationHandlers\">";
	$f[]="			<list>";
	$f[]="				<bean class=\"org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler\"";
	$f[]="					p:httpClient-ref=\"httpClient\" />";
	$f[]="\t<bean";
	$f[]="\tclass=\"org.jasig.cas.adaptors.ldap.FastBindLdapAuthenticationHandler\" >";
	$f[]="\t\t\t<property name=\"filter\" value=\"uid=%u\" />";
	$f[]="\t\t\t<property name=\"contextSource\" ref=\"contextSource\" />";
	$f[]="\t</bean>";
	
	$f[]="\t<bean class=\"org.jasig.cas.adaptors.ldap.BindLdapAuthenticationHandler\">";
	$f[]="\t<property name=\"filter\" value=\"uid=%u\" />";
	$f[]="\t<property name=\"searchBase\" value=\"dc=organizations,$ldap->suffix\" />";
	$f[]="\t<property name=\"contextSource\" ref=\"contextSource\" />";
	$f[]="\t</bean>";
	$f[]="			</list>";
	$f[]="		</property>";
	$f[]="	</bean>";
	$f[]="";
	$f[]="";
	$f[]="	<!--";
	$f[]="	This bean defines the security roles for the Services Management application.  Simple deployments can use the in-memory version.";
	$f[]="	More robust deployments will want to use another option, such as the Jdbc version.";
	$f[]="	";
	$f[]="	The name of this should remain \"userDetailsService\" in order for Spring Security to find it.";
	$f[]="	 -->";
	$f[]="    <!-- <sec:user name=\"@@THIS SHOULD BE REPLACED@@\" password=\"notused\" authorities=\"ROLE_ADMIN\" />-->";
	$f[]="";
	$f[]="    <sec:user-service id=\"userDetailsService\">";
	$f[]="        <sec:user name=\"@@THIS SHOULD BE REPLACED@@\" password=\"notused\" authorities=\"ROLE_ADMIN\" />";
	$f[]="    </sec:user-service>";
	$f[]="	";
	$f[]="	<!-- ";
	$f[]="	Bean that defines the attributes that a service may return.  This example uses the Stub/Mock version.  A real implementation";
	$f[]="	may go against a database or LDAP server.  The id should remain \"attributeRepository\" though.";
	$f[]="	 -->";
	$f[]="	<bean id=\"attributeRepository\"";
	$f[]="		class=\"org.jasig.services.persondir.support.StubPersonAttributeDao\">";
	$f[]="		<property name=\"backingMap\">";
	$f[]="			<map>";
	$f[]="				<entry key=\"uid\" value=\"uid\" />";
	$f[]="				<entry key=\"eduPersonAffiliation\" value=\"eduPersonAffiliation\" /> ";
	$f[]="				<entry key=\"groupMembership\" value=\"groupMembership\" />";
	$f[]="			</map>";
	$f[]="		</property>";
	$f[]="	</bean>";
	$f[]="	";
	$f[]="	<!-- ";
	$f[]="	Sample, in-memory data store for the ServiceRegistry. A real implementation";
	$f[]="	would probably want to replace this with the JPA-backed ServiceRegistry DAO";
	$f[]="	The name of this bean should remain \"serviceRegistryDao\".";
	$f[]="	 -->";
	$f[]="	<bean";
	$f[]="		id=\"serviceRegistryDao\"";
	$f[]="        class=\"org.jasig.cas.services.InMemoryServiceRegistryDaoImpl\">";
	$f[]="            <property name=\"registeredServices\">";
	$f[]="                <list>";
	$f[]="                    <bean class=\"org.jasig.cas.services.RegexRegisteredService\">";
	$f[]="                        <property name=\"id\" value=\"0\" />";
	$f[]="                        <property name=\"name\" value=\"HTTP and IMAP\" />";
	$f[]="                        <property name=\"description\" value=\"Allows HTTP(S) and IMAP(S) protocols\" />";
	$f[]="                        <property name=\"serviceId\" value=\"^(https?|imaps?)://.*\" />";
	$f[]="                        <property name=\"evaluationOrder\" value=\"10000001\" />";
	$f[]="                    </bean>";
	$f[]="                    <!--";
	$f[]="                    Use the following definition instead of the above to further restrict access";
	$f[]="                    to services within your domain (including subdomains).";
	$f[]="                    Note that example.com must be replaced with the domain you wish to permit.";
	$f[]="                    -->";
	$f[]="                    <!--";
	$f[]="                    <bean class=\"org.jasig.cas.services.RegexRegisteredService\">";
	$f[]="                        <property name=\"id\" value=\"1\" />";
	$f[]="                        <property name=\"name\" value=\"HTTP and IMAP on example.com\" />";
	$f[]="                        <property name=\"description\" value=\"Allows HTTP(S) and IMAP(S) protocols on example.com\" />";
	$f[]="                        <property name=\"serviceId\" value=\"^(https?|imaps?)://([A-Za-z0-9_-]+\.)*example\.com/.*\" />";
	$f[]="                        <property name=\"evaluationOrder\" value=\"0\" />";
	$f[]="                    </bean>";
	$f[]="                    -->";
	$f[]="                </list>";
	$f[]="            </property>";
	$f[]="        </bean>";
	$f[]="";
	$f[]="  <bean id=\"auditTrailManager\" class=\"com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager\" />";
	$f[]="  ";
	$f[]="  <bean id=\"healthCheckMonitor\" class=\"org.jasig.cas.monitor.HealthCheckMonitor\">";
	$f[]="    <property name=\"monitors\">";
	$f[]="      <list>";
	$f[]="        <bean class=\"org.jasig.cas.monitor.MemoryMonitor\"";
	$f[]="            p:freeMemoryWarnThreshold=\"10\" />";
	$f[]="        <!--";
	$f[]="          NOTE";
	$f[]="          The following ticket registries support SessionMonitor:";
	$f[]="            * DefaultTicketRegistry";
	$f[]="            * JpaTicketRegistry";
	$f[]="          Remove this monitor if you use an unsupported registry.";
	$f[]="        -->";
	$f[]="        <bean class=\"org.jasig.cas.monitor.SessionMonitor\"";
	$f[]="            p:ticketRegistry-ref=\"ticketRegistry\"";
	$f[]="            p:serviceTicketCountWarnThreshold=\"5000\"";
	$f[]="            p:sessionCountWarnThreshold=\"100000\" />";
	$f[]="      </list>";
	$f[]="    </property>";
	$f[]="  </bean>";
	$f[]="\t<bean id=\"contextSource\" class=\"org.springframework.ldap.core.support.LdapContextSource\">";
	$f[]="\t\t<property name=\"pooled\" value=\"true\"/>";
	$f[]="\t\t\t<property name=\"urls\">";
	$f[]="\t\t\t\t<list>";
	$f[]="\t\t\t\t\t<value>ldap://$ldap->ldap_host:$ldap->ldap_port/</value>";
	$f[]="\t\t\t\t</list>";
	$f[]="\t\t\t</property>";
	$f[]="\t\t<property name=\"userDn\" value=\"cn=$ldap->ldap_admin,$ldap->suffix\"/>";
	$f[]="\t\t<property name=\"password\" value=\"$ldap->ldap_password\"/>";
	$f[]="\t\t<property name=\"baseEnvironmentProperties\">";
	$f[]="\t\t<map>";
	$f[]="\t\t\t<entry>";
	$f[]="\t\t\t\t<key>";
	$f[]="\t\t\t\t\t<value>java.naming.security.authentication</value>";
	$f[]="\t\t\t\t</key>";
	$f[]="\t\t\t\t<value>simple</value>";
	$f[]="\t\t\t</entry>";
	$f[]="\t\t</map>";
	$f[]="\t\t</property>";
	$f[]="\t</bean>";	
	$f[]="</beans>";
	$f[]="";
	
	@file_put_contents("/var/lib/tomcat6/webapps/cas/WEB-INF/deployerConfigContext.xml", @implode("\n", $f));
	echo "Starting......: ".date("H:i:s")." C.A.S deployerConfigContext.xml done...\n";
}

function maven2(){
	@mkdir("/usr/share/maven2");
	$f[]="main is org.apache.maven.cli.compat.CompatibleMain from plexus.core";
	$f[]="set maven.home default /usr/share/maven2";
	$f[]="[plexus.core]";
	$f[]="load /usr/share/maven2/lib/*.jar";
	@file_put_contents("/etc/maven2/m2.conf", @implode("\n", $f));
	echo "Starting......: ".date("H:i:s")." C.A.S /etc/maven2/m2.conf done...\n";
	
	$f=array();
	
	$f[]="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
	$f[]="";
	$f[]="<!--";
	$f[]="Licensed to the Apache Software Foundation (ASF) under one";
	$f[]="or more contributor license agreements.  See the NOTICE file";
	$f[]="distributed with this work for additional information";
	$f[]="regarding copyright ownership.  The ASF licenses this file";
	$f[]="to you under the Apache License, Version 2.0 (the";
	$f[]="\"License\"); you may not use this file except in compliance";
	$f[]="with the License.  You may obtain a copy of the License at";
	$f[]="";
	$f[]="    http://www.apache.org/licenses/LICENSE-2.0";
	$f[]="";
	$f[]="Unless required by applicable law or agreed to in writing,";
	$f[]="software distributed under the License is distributed on an";
	$f[]="\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY";
	$f[]="KIND, either express or implied.  See the License for the";
	$f[]="specific language governing permissions and limitations";
	$f[]="under the License.";
	$f[]="-->";
	$f[]="";
	$f[]="<!--";
	$f[]=" | This is the configuration file for Maven. It can be specified at two levels:";
	$f[]=" |";
	$f[]=" |  1. User Level. This settings.xml file provides configuration for a single user,";
	$f[]=" |                 and is normally provided in \${user.home}/.m2/settings.xml.";
	$f[]=" |";
	$f[]=" |                 NOTE: This location can be overridden with the CLI option:";
	$f[]=" |";
	$f[]=" |                 -s /path/to/user/settings.xml";
	$f[]=" |";
	$f[]=" |  2. Global Level. This settings.xml file provides configuration for all Maven";
	$f[]=" |                 users on a machine (assuming they're all using the same Maven";
	$f[]=" |                 installation). It's normally provided in";
	$f[]=" |                 \${maven.home}/conf/settings.xml.";
	$f[]=" |";
	$f[]=" |                 NOTE: This location can be overridden with the CLI option:";
	$f[]=" |";
	$f[]=" |                 -gs /path/to/global/settings.xml";
	$f[]=" |";
	$f[]=" | The sections in this sample file are intended to give you a running start at";
	$f[]=" | getting the most out of your Maven installation. Where appropriate, the default";
	$f[]=" | values (values used when the setting is not specified) are provided.";
	$f[]=" |";
	$f[]=" |-->";
	$f[]="<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"";
	$f[]="          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"";
	$f[]="          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">";
	$f[]="  <localRepository>/usr/share/maven2</localRepository>";
	$f[]="";
	$f[]="  <!-- interactiveMode";
	$f[]="   | This will determine whether maven prompts you when it needs input. If set to false,";
	$f[]="   | maven will use a sensible default value, perhaps based on some other setting, for";
	$f[]="   | the parameter in question.";
	$f[]="   |";
	$f[]="   | Default: true";
	$f[]="  <interactiveMode>true</interactiveMode>";
	$f[]="  -->";
	$f[]="";
	$f[]="  <!-- offline";
	$f[]="   | Determines whether maven should attempt to connect to the network when executing a build.";
	$f[]="   | This will have an effect on artifact downloads, artifact deployment, and others.";
	$f[]="   |";
	$f[]="   | Default: false";
	$f[]="  <offline>false</offline>";
	$f[]="  -->";
	$f[]="";
	$f[]="  <!-- pluginGroups";
	$f[]="   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.";
	$f[]="   | when invoking a command line like \"mvn prefix:goal\". Maven will automatically add the group identifiers";
	$f[]="   | \"org.apache.maven.plugins\" and \"org.codehaus.mojo\" if these are not already contained in the list.";
	$f[]="   |-->";
	$f[]="  <pluginGroups>";
	$f[]="    <!-- pluginGroup";
	$f[]="     | Specifies a further group identifier to use for plugin lookup.";
	$f[]="    <pluginGroup>com.your.plugins</pluginGroup>";
	$f[]="    -->";
	$f[]="  </pluginGroups>";
	$f[]="";
	$f[]="  <!-- proxies";
	$f[]="   | This is a list of proxies which can be used on this machine to connect to the network.";
	$f[]="   | Unless otherwise specified (by system property or command-line switch), the first proxy";
	$f[]="   | specification in this list marked as active will be used.";
	$f[]="   |-->";
	$f[]="  <proxies>";
	$f[]="    <!-- proxy";
	$f[]="     | Specification for one proxy, to be used in connecting to the network.";
	$f[]="     |";
	$f[]="    <proxy>";
	$f[]="      <id>optional</id>";
	$f[]="      <active>true</active>";
	$f[]="      <protocol>http</protocol>";
	$f[]="      <username>proxyuser</username>";
	$f[]="      <password>proxypass</password>";
	$f[]="      <host>proxy.host.net</host>";
	$f[]="      <port>80</port>";
	$f[]="      <nonProxyHosts>local.net|some.host.com</nonProxyHosts>";
	$f[]="    </proxy>";
	$f[]="    -->";
	$f[]="  </proxies>";
	$f[]="";
	$f[]="  <!-- servers";
	$f[]="   | This is a list of authentication profiles, keyed by the server-id used within the system.";
	$f[]="   | Authentication profiles can be used whenever maven must make a connection to a remote server.";
	$f[]="   |-->";
	$f[]="  <servers>";
	$f[]="    <!-- server";
	$f[]="     | Specifies the authentication information to use when connecting to a particular server, identified by";
	$f[]="     | a unique name within the system (referred to by the 'id' attribute below).";
	$f[]="     |";
	$f[]="     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are";
	$f[]="     |       used together.";
	$f[]="     |";
	$f[]="    <server>";
	$f[]="      <id>deploymentRepo</id>";
	$f[]="      <username>repouser</username>";
	$f[]="      <password>repopwd</password>";
	$f[]="    </server>";
	$f[]="    -->";
	$f[]="";
	$f[]="    <!-- Another sample, using keys to authenticate.";
	$f[]="    <server>";
	$f[]="      <id>siteServer</id>";
	$f[]="      <privateKey>/path/to/private/key</privateKey>";
	$f[]="      <passphrase>optional; leave empty if not used.</passphrase>";
	$f[]="    </server>";
	$f[]="    -->";
	$f[]="  </servers>";
	$f[]="";
	$f[]="  <!-- mirrors";
	$f[]="   | This is a list of mirrors to be used in downloading artifacts from remote repositories.";
	$f[]="   |";
	$f[]="   | It works like this: a POM may declare a repository to use in resolving certain artifacts.";
	$f[]="   | However, this repository may have problems with heavy traffic at times, so people have mirrored";
	$f[]="   | it to several places.";
	$f[]="   |";
	$f[]="   | That repository definition will have a unique id, so we can create a mirror reference for that";
	$f[]="   | repository, to be used as an alternate download site. The mirror site will be the preferred";
	$f[]="   | server for that repository.";
	$f[]="   |-->";
	$f[]="  <mirrors>";
	$f[]="    <!-- mirror";
	$f[]="     | Specifies a repository mirror site to use instead of a given repository. The repository that";
	$f[]="     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used";
	$f[]="     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.";
	$f[]="     |";
	$f[]="    <mirror>";
	$f[]="      <id>mirrorId</id>";
	$f[]="      <mirrorOf>repositoryId</mirrorOf>";
	$f[]="      <name>Human Readable Name for this Mirror.</name>";
	$f[]="      <url>http://my.repository.com/repo/path</url>";
	$f[]="    </mirror>";
	$f[]="     -->";
	$f[]="  </mirrors>";
	$f[]="";
	$f[]="  <!-- profiles";
	$f[]="   | This is a list of profiles which can be activated in a variety of ways, and which can modify";
	$f[]="   | the build process. Profiles provided in the settings.xml are intended to provide local machine-";
	$f[]="   | specific paths and repository locations which allow the build to work in the local environment.";
	$f[]="   |";
	$f[]="   | For example, if you have an integration testing plugin - like cactus - that needs to know where";
	$f[]="   | your Tomcat instance is installed, you can provide a variable here such that the variable is";
	$f[]="   | dereferenced during the build process to configure the cactus plugin.";
	$f[]="   |";
	$f[]="   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles";
	$f[]="   | section of this document (settings.xml) - will be discussed later. Another way essentially";
	$f[]="   | relies on the detection of a system property, either matching a particular value for the property,";
	$f[]="   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a";
	$f[]="   | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'.";
	$f[]="   | Finally, the list of active profiles can be specified directly from the command line.";
	$f[]="   |";
	$f[]="   | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact";
	$f[]="   |       repositories, plugin repositories, and free-form properties to be used as configuration";
	$f[]="   |       variables for plugins in the POM.";
	$f[]="   |";
	$f[]="   |-->";
	$f[]="  <profiles>";
	$f[]="    <!-- profile";
	$f[]="     | Specifies a set of introductions to the build process, to be activated using one or more of the";
	$f[]="     | mechanisms described above. For inheritance purposes, and to activate profiles via <activatedProfiles/>";
	$f[]="     | or the command line, profiles have to have an ID that is unique.";
	$f[]="     |";
	$f[]="     | An encouraged best practice for profile identification is to use a consistent naming convention";
	$f[]="     | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc.";
	$f[]="     | This will make it more intuitive to understand what the set of introduced profiles is attempting";
	$f[]="     | to accomplish, particularly when you only have a list of profile id's for debug.";
	$f[]="     |";
	$f[]="     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.";
	$f[]="    <profile>";
	$f[]="      <id>jdk-1.4</id>";
	$f[]="";
	$f[]="      <activation>";
	$f[]="        <jdk>1.4</jdk>";
	$f[]="      </activation>";
	$f[]="";
	$f[]="      <repositories>";
	$f[]="        <repository>";
	$f[]="          <id>jdk14</id>";
	$f[]="          <name>Repository for JDK 1.4 builds</name>";
	$f[]="          <url>http://www.myhost.com/maven/jdk14</url>";
	$f[]="          <layout>default</layout>";
	$f[]="          <snapshotPolicy>always</snapshotPolicy>";
	$f[]="        </repository>";
	$f[]="      </repositories>";
	$f[]="    </profile>";
	$f[]="    -->";
	$f[]="";
	$f[]="    <!--";
	$f[]="     | Here is another profile, activated by the system property 'target-env' with a value of 'dev',";
	$f[]="     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration";
	$f[]="     | might hypothetically look like:";
	$f[]="     |";
	$f[]="     | ...";
	$f[]="     | <plugin>";
	$f[]="     |   <groupId>org.myco.myplugins</groupId>";
	$f[]="     |   <artifactId>myplugin</artifactId>";
	$f[]="     |";
	$f[]="     |   <configuration>";
	$f[]="     |     <tomcatLocation>\${tomcatPath}</tomcatLocation>";
	$f[]="     |   </configuration>";
	$f[]="     | </plugin>";
	$f[]="     | ...";
	$f[]="     |";
	$f[]="     | NOTE: If you just wanted to inject this configuration whenever someone set 'target-env' to";
	$f[]="     |       anything, you could just leave off the <value/> inside the activation-property.";
	$f[]="     |";
	$f[]="    <profile>";
	$f[]="      <id>env-dev</id>";
	$f[]="";
	$f[]="      <activation>";
	$f[]="        <property>";
	$f[]="          <name>target-env</name>";
	$f[]="          <value>dev</value>";
	$f[]="        </property>";
	$f[]="      </activation>";
	$f[]="";
	$f[]="      <properties>";
	$f[]="        <tomcatPath>/path/to/tomcat/instance</tomcatPath>";
	$f[]="      </properties>";
	$f[]="    </profile>";
	$f[]="    -->";
	$f[]="  </profiles>";
	$f[]="";
	$f[]="  <!-- activeProfiles";
	$f[]="   | List of profiles that are active for all builds.";
	$f[]="   |";
	$f[]="  <activeProfiles>";
	$f[]="    <activeProfile>alwaysActiveProfile</activeProfile>";
	$f[]="    <activeProfile>anotherAlwaysActiveProfile</activeProfile>";
	$f[]="  </activeProfiles>";
	$f[]="  -->";
	$f[]="</settings>";
	$f[]="";
	@file_put_contents("/etc/maven2/settings.xml", @implode("\n", $f));
	echo "Starting......: ".date("H:i:s")." C.A.S /etc/maven2/settings.xml done...\n";
	
}

function writesettings(){
	$xml = simplexml_load_file("/usr/share/cas-server/pom.xml");
	$Version=$xml->version[0];
	$f[]="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
	$f[]="<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">";
	$f[]="  <parent>";
	$f[]="    <groupId>org.jasig.parent</groupId>";
	$f[]="    <artifactId>jasig-parent</artifactId>";
	$f[]="    <version>34</version>";
	$f[]="  </parent>";
	$f[]="  <modelVersion>4.0.0</modelVersion>";
	$f[]="  <groupId>org.jasig.cas</groupId>";
	$f[]="  <artifactId>cas-server</artifactId>";
	$f[]="  <packaging>pom</packaging>";
	$f[]="  <name>Jasig Central Authentication Service</name>";
	$f[]="  <description>Jasig CAS SSO server libraries and Web application.</description>";
	$f[]="  <version>$Version</version>";
	$f[]="  <url>http://www.jasig.org/cas/</url>";
	$f[]="  <inceptionYear>2004</inceptionYear>";
	$f[]="";
	$f[]="  <licenses>";
	$f[]="    <license>";
	$f[]="      <name>Apache 2</name>";
	$f[]="      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>";
	$f[]="      <distribution>repo</distribution>";
	$f[]="    </license>";
	$f[]="  </licenses>";
	$f[]="";
	$f[]="  <developers>";
	$f[]="    <developer>";
	$f[]="      <id>battags</id>";
	$f[]="      <name>Scott Battaglia</name>";
	$f[]="      <email>scott.battaglia@gmail.com</email>";
	$f[]="      <timezone>-5</timezone>";
	$f[]="      <roles>";
	$f[]="        <role>developer</role>";
	$f[]="      </roles>";
	$f[]="    </developer>";
	$f[]="    <developer>";
	$f[]="      <id>serac</id>";
	$f[]="      <name>Marvin S. Addison</name>";
	$f[]="      <email>marvin.addison@gmail.com</email>";
	$f[]="      <timezone>-5</timezone>";
	$f[]="      <roles>";
	$f[]="        <role>developer</role>";
	$f[]="        <role>cas-server-support-ldap module lead</role>";
	$f[]="        <role>cas-server-support-x509 module lead</role>";
	$f[]="      </roles>";
	$f[]="    </developer>";
	$f[]="    <developer>";
	$f[]="      <id>wgthom</id>";
	$f[]="      <name>William G. Thompson</name>";
	$f[]="      <email>wgthom@gmail.com</email>";
	$f[]="      <timezone>-5</timezone>";
	$f[]="      <roles>";
	$f[]="        <role>developer</role>";
	$f[]="      </roles>";
	$f[]="    </developer>";
	$f[]="    <developer>";
	$f[]="      <id>apetro</id>";
	$f[]="      <name>Andrew Petro</name>";
	$f[]="      <email>apetro@unicon.net</email>";
	$f[]="      <timezone>-5</timezone>";
	$f[]="      <roles>";
	$f[]="        <role>developer</role>";
	$f[]="      </roles>";
	$f[]="    </developer>";
	$f[]="    <developer>";
	$f[]="      <id>leleuj</id>";
	$f[]="      <name>Jérôme Leleu</name>";
	$f[]="      <email>leleuj@gmail.com</email>";
	$f[]="      <timezone>-5</timezone>";
	$f[]="      <roles>";
	$f[]="        <role>developer</role>";
	$f[]="        <role>cas-server-support-oauth module lead</role>";
	$f[]="      </roles>";
	$f[]="    </developer>";
	$f[]="    <developer>";
	$f[]="      <id>mmoayyed</id>";
	$f[]="      <name>Misagh Moayyed</name>";
	$f[]="      <email>mmoayyed@unicon.net</email>";
	$f[]="      <timezone>-7</timezone>";
	$f[]="      <roles>";
	$f[]="        <role>developer</role>";
	$f[]="      </roles>";
	$f[]="    </developer>";
	$f[]="";
	$f[]="  </developers>";
	$f[]="";
	$f[]="  <contributors>";
	$f[]="    <contributor>";
	$f[]="      <name>Adam Rybicki</name>";
	$f[]="      <email>arybicki@unicon.net</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Andrew Tillinghast</name>";
	$f[]="      <email>atilling@conncoll.edu</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Arnaud Lesueur</name>";
	$f[]="      <email>arnaud.lesueur@gmail.com</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Dmitriy Kopylenko</name>";
	$f[]="      <email>dima767@gmail.com</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Drew Mazurek</name>";
	$f[]="      <email>dmazurek@unicon.net</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Eric Dalquist</name>";
	$f[]="      <email>eric.dalquist@doit.wisc.edu</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Eric Pierce</name>";
	$f[]="      <email>epierce@usf.edu</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Frederic Esnault</name>";
	$f[]="      <email>esnault.frederic@gmail.com</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Howard Gilbert</name>";
	$f[]="      <email>Howard.Gilbert@yale.edu</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Jan Van der Velpen</name>";
	$f[]="      <email>velpi@industria.be</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>John Martin</name>";
	$f[]="      <email>jmartin@unicon.net</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>MarcAntoine Garrigue</name>";
	$f[]="      <email>marc.antoine.garrigue@gmail.com</email>";
	$f[]="    </contributor>";
	$f[]="    <contributor>";
	$f[]="      <name>Mihir Patel</name>";
	$f[]="      <email>exploremihir@gmail.com</email>";
	$f[]="    </contributor>";
	$f[]="  </contributors>";
	$f[]="";
	$f[]="  <issueManagement>";
	$f[]="    <system>Jira</system>";
	$f[]="    <url>https://issues.jasig.org/browse/CAS</url>";
	$f[]="  </issueManagement>";
	$f[]="  ";
	$f[]="  <mailingLists>";
	$f[]="    <mailingList>";
	$f[]="      <name>cas-user</name>";
	$f[]="      <subscribe>join-cas-user@lists.jasig.org</subscribe>";
	$f[]="      <unsubscribe>leave-cas-user@lists.jasig.org</unsubscribe>";
	$f[]="      <post>cas-user@lists.jasig.org</post>";
	$f[]="      <archive>https://lists.wisc.edu/read/?forum=cas-user</archive>";
	$f[]="    </mailingList>";
	$f[]="    <mailingList>";
	$f[]="      <name>cas-dev</name>";
	$f[]="      <subscribe>join-cas-dev@lists.jasig.org</subscribe>";
	$f[]="      <unsubscribe>leave-cas-dev@lists.jasig.org</unsubscribe>";
	$f[]="      <post>cas-dev@lists.jasig.org</post>";
	$f[]="      <archive>https://lists.wisc.edu/read/?forum=cas-dev</archive>";
	$f[]="    </mailingList>";
	$f[]="    <mailingList>";
	$f[]="      <name>cas-announce</name>";
	$f[]="      <subscribe>join-cas-announce@lists.jasig.org</subscribe>";
	$f[]="      <unsubscribe>leave-cas-announce@lists.jasig.org</unsubscribe>";
	$f[]="      <post>cas-announce@lists.jasig.org</post>";
	$f[]="      <archive>https://lists.wisc.edu/read/?forum=cas-announce</archive>";
	$f[]="    </mailingList>";
	$f[]="  </mailingLists>";
	$f[]="";
	$f[]="  <scm>";
	$f[]="    <connection>scm:git:git@github.com:Jasig/cas.git</connection>";
	$f[]="    <developerConnection>scm:git:git@github.com:Jasig/cas.git</developerConnection>";
	$f[]="    <url>https://github.com/Jasig/cas</url>";
	$f[]="  </scm>";
	$f[]="";
	$f[]="  <build>";
	$f[]="    <testResources>";
	$f[]="      <testResource>";
	$f[]="        <directory>\${basedir}/src/test/resources</directory>";
	$f[]="      </testResource>";
	$f[]="    </testResources>";
	$f[]="    ";
	$f[]="    <pluginManagement>";
	$f[]="      <plugins>";
	$f[]="      	<plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-surefire-plugin</artifactId>";
	$f[]="        <version>2.12</version>";
	$f[]="        <configuration>";
	$f[]="        	<skipTests>true</skipTests>";
	$f[]="          <forkMode>once</forkMode>";
	$f[]="          <includes>";
	$f[]="            <include>**/*Tests.java</include>";
	$f[]="          </includes>";
	$f[]="          <excludes>";
	$f[]="            <exclude>**/Abstract*.java</exclude>";
	$f[]="          </excludes>";
	$f[]="          <additionalClasspathElements>";
	$f[]="            <additionalClasspathElement>\${project.build.directory}/test-lib/jdbc-driver.jar</additionalClasspathElement>";
	$f[]="          </additionalClasspathElements>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      </plugins>";
	$f[]="    </pluginManagement>";
	$f[]="    ";
	$f[]="    <plugins>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-enforcer-plugin</artifactId>";
	$f[]="        <executions>";
	$f[]="          <execution>";
	$f[]="            <id>enforce-versions</id>";
	$f[]="            <goals>";
	$f[]="              <goal>enforce</goal>";
	$f[]="            </goals>";
	$f[]="            <configuration>";
	$f[]="              <rules>";
	$f[]="                <requireMavenVersion>";
	$f[]="                  <version>2.0.9</version>";
	$f[]="                </requireMavenVersion>";
	$f[]="                <requireJavaVersion>";
	$f[]="                  <version>\${jdk.version}</version>";
	$f[]="                </requireJavaVersion>";
	$f[]="              </rules>";
	$f[]="            </configuration>";
	$f[]="        </execution>";
	$f[]="        </executions>";
	$f[]="      </plugin>";
	$f[]="      <!--";
	$f[]="      <plugin>";
	$f[]="        <groupId>com.atlassian.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-clover2      lugin</artifactId>";
	$f[]="        <version>\${clover.version}</version>";
	$f[]="        <configuration>";
	$f[]="          <license><![CDATA[oPpoNpLipDQKHHXaIXJPCIsoqRpdAfeXwIImkDIRoTnriq";
	$f[]="mi2KuXZFGad>>Lz0ULLXhqIo2KPjARsdren1aP3vzebzkM";
	$f[]="qNNNUvQNpqopPoOQRqmTvqoPnOnMopRPqpSUtxrWTxOxTu";
	$f[]="pTSqrOnmqmUUnopqmvummmmmmUUnopqmvummmmmmUUA1jJ";
	$f[]="97W9kZkUUnmm]]></license>";
	$f[]="          <jdk>\${jdk.version}</jdk>";
	$f[]="          <generateXml>true</generateXml>";
	$f[]="          <generateHtml>true</generateHtml>";
	$f[]="          <includes>";
	$f[]="            <include>**/*.java</include>";
	$f[]="          </includes>";
	$f[]="          <excludes>";
	$f[]="            <exclude>**/CasVersion.java</exclude>";
	$f[]="            <exclude>";
	$f[]="              **/SamlCompliantUniqueTicketIdGenerator.java";
	$f[]="            </exclude>";
	$f[]="          </excludes>";
	$f[]="        </configuration>";
	$f[]="        <executions>";
	$f[]="          <execution>";
	$f[]="            <phase>verify</phase>";
	$f[]="            <goals>";
	$f[]="              <goal>instrument</goal>";
	$f[]="            </goals>";
	$f[]="          </execution>";
	$f[]="        </executions>";
	$f[]="      </plugin>-->";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-compiler-plugin</artifactId>";
	$f[]="        <configuration>";
	$f[]="          <source>\${jdk.version}</source>";
	$f[]="          <target>\${jdk.version}</target>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-jar-plugin</artifactId>";
	$f[]="        <configuration>";
	$f[]="          <archive>";
	$f[]="            <manifest>";
	$f[]="              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>";
	$f[]="            </manifest>";
	$f[]="          </archive>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-assembly-plugin</artifactId>";
	$f[]="        <version>2.2.1</version>";
	$f[]="        <configuration>";
	$f[]="          <descriptors>";
	$f[]="            <descriptor>\${basedir}/assembly.xml</descriptor>";
	$f[]="          </descriptors>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.codehaus.mojo</groupId>";
	$f[]="        <artifactId>aspectj-maven-plugin</artifactId>";
	$f[]="        <version>1.3.1</version>";
	$f[]="        <executions>";
	$f[]="          <execution>";
	$f[]="            <goals>";
	$f[]="              <goal>compile</goal>";
	$f[]="            </goals>";
	$f[]="          </execution>";
	$f[]="        </executions>";
	$f[]="        <configuration>";
	$f[]="          <source>\${jdk.version}</source>";
	$f[]="          <target>\${jdk.version}</target>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-release-plugin</artifactId>";
	$f[]="        <version>2.2.1</version>";
	$f[]="        <configuration>";
	$f[]="          <mavenExecutorId>forked-path</mavenExecutorId>";
	$f[]="          <tagNameFormat>v@{project.version}</tagNameFormat>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      <!-- CAS-988 generate hashes for assembly artifacts -->";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-antrun-plugin</artifactId>";
	$f[]="        <version>1.5</version>";
	$f[]="        <configuration>";
	$f[]="          <target>";
	$f[]="            <ant antfile=\"tasks.xml\" target=\"genhash\" />";
	$f[]="          </target>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>com.mycila.maven-license-plugin</groupId>";
	$f[]="        <artifactId>maven-license-plugin</artifactId>";
	$f[]="        <configuration>";
	$f[]="          <header>src/licensing/header.txt</header>";
	$f[]="          <headerDefinitions>";
	$f[]="            <headerDefinition>src/licensing/header-definitions.xml</headerDefinition>";
	$f[]="          </headerDefinitions>";
	$f[]="          <aggregate>true</aggregate>";
	$f[]="          <excludes>";
	$f[]="            <exclude>LICENSE</exclude>";
	$f[]="            <exclude>**/INSTALL*</exclude>";
	$f[]="            <exclude>**/NOTICE*</exclude>";
	$f[]="            <exclude>**/README*</exclude>";
	$f[]="            <exclude>**/readme*</exclude>";
	$f[]="            <exclude>**/*.log</exclude>";
	$f[]="            <exclude>**/*.license</exclude>";
	$f[]="            <exclude>**/*.txt</exclude>";
	$f[]="            <exclude>**/*.crt</exclude>";
	$f[]="            <exclude>**/*.crl</exclude>";
	$f[]="            <exclude>**/*.key</exclude>";
	$f[]="            <exclude>**/.gitignore</exclude>";
	$f[]="            <exclude>**/overlays/**</exclude>";
	$f[]="            <exclude>src/licensing/**</exclude>";
	$f[]="            <exclude>**/testCA/**</exclude>";
	$f[]="          </excludes>";
	$f[]="        </configuration>";
	$f[]="      </plugin>";
	$f[]="    </plugins>";
	$f[]="  </build>";
	$f[]="";
	$f[]="  <dependencies>";
	$f[]="		<dependency>";
	$f[]="      	<groupId>junit</groupId>";
	$f[]="     		<artifactId>junit</artifactId>";
	$f[]="      	<version>\${junit.version}</version>";
	$f[]="      	<scope>test</scope>";
	$f[]="    	</dependency>";
	$f[]="";
	$f[]="    	<dependency>";
	$f[]="    		<groupId>org.jasig.cas</groupId>";
	$f[]="    		<artifactId>cas-server-support-ldap</artifactId>";
	$f[]="    		<version>\${project.version}</version>";
	$f[]="    	</dependency>";
	$f[]="";
	$f[]="		<dependency>";
	$f[]="			<groupId>org.mockito</groupId>";
	$f[]="	    	<artifactId>mockito-core</artifactId>";
	$f[]="	    	<version>\${mockito.version}</version>";
	$f[]="	    	<scope>test</scope>";
	$f[]="		</dependency>";
	$f[]="";
	$f[]="		<dependency>";
	$f[]="			<groupId>org.jasig.cas</groupId>";
	$f[]="			<artifactId>cas-server-support-spnego</artifactId>";
	$f[]="			<version>\${cas.version}</version>";
	$f[]="		</dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>org.springframework</groupId>";
	$f[]="      <artifactId>spring-test</artifactId>";
	$f[]="      <version>\${spring.version}</version>";
	$f[]="      <scope>test</scope>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>javax.servlet</groupId>";
	$f[]="      <artifactId>servlet-api</artifactId>";
	$f[]="      <scope>provided</scope>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>org.aspectj</groupId>";
	$f[]="      <artifactId>aspectjrt</artifactId>";
	$f[]="      <scope>compile</scope>";
	$f[]="      <version>\${aspectj.version}</version>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>org.aspectj</groupId>";
	$f[]="      <artifactId>aspectjweaver</artifactId>";
	$f[]="      <scope>compile</scope>";
	$f[]="      <version>\${aspectj.version}</version>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>javax.validation</groupId>";
	$f[]="      <artifactId>validation-api</artifactId>";
	$f[]="      <version>\${javax.validation.version}</version>";
	$f[]="      <scope>compile</scope>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>org.slf4j</groupId>";
	$f[]="      <artifactId>slf4j-api</artifactId>";
	$f[]="      <version>\${slf4j.version}</version>";
	$f[]="      <scope>compile</scope>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>org.slf4j</groupId>";
	$f[]="      <artifactId>slf4j-log4j12</artifactId>";
	$f[]="      <version>\${slf4j.version}</version>";
	$f[]="      <scope>runtime</scope>";
	$f[]="      <type>jar</type>";
	$f[]="      <exclusions>";
	$f[]="        <exclusion>";
	$f[]="          <groupId>log4j</groupId>";
	$f[]="          <artifactId>log4j</artifactId>";
	$f[]="        </exclusion>";
	$f[]="      </exclusions>";
	$f[]="    </dependency>";
	$f[]="";
	$f[]="    <dependency>";
	$f[]="      <groupId>org.slf4j</groupId>";
	$f[]="      <artifactId>jcl-over-slf4j</artifactId>";
	$f[]="      <version>\${slf4j.version}</version>";
	$f[]="      <scope>compile</scope>";
	$f[]="    </dependency>";
	$f[]="  </dependencies>";
	$f[]="";
	$f[]="  <repositories>";
	$f[]="    <repository>";
	$f[]="      <id>jasig-repository</id>";
	$f[]="      <name>Jasig Maven2 Repository</name>";
	$f[]="      <url>http://developer.ja-sig.org/maven2</url>";
	$f[]="    </repository>";
	$f[]="";
	$f[]="    <repository>";
	$f[]="      <id>jboss</id>";
	$f[]="      <name>JBoss Repository</name>";
	$f[]="      <layout>default</layout>";
	$f[]="      <url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>";
	$f[]="    </repository>";
	$f[]="  </repositories>";
	$f[]="";
	$f[]="  <pluginRepositories>";
	$f[]="    <pluginRepository>";
	$f[]="      <id>mojo-snapshot</id>";
	$f[]="      <name>Codehause Mojo Snapshot Repository</name>";
	$f[]="      <url>https://nexus.codehaus.org/content/repositories/codehaus-snapshots/</url>";
	$f[]="      <snapshots>";
	$f[]="        <enabled>true</enabled>";
	$f[]="      </snapshots>";
	$f[]="    </pluginRepository>";
	$f[]="  </pluginRepositories>";
	$f[]="";
	$f[]="  <dependencyManagement>";
	$f[]="    <dependencies>";
	$f[]="      <dependency>";
	$f[]="        <groupId>commons-lang</groupId>";
	$f[]="        <artifactId>commons-lang</artifactId>";
	$f[]="        <version>\${commons.lang.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <!-- Inspektr Dependencies -->";
	$f[]="      <dependency>";
	$f[]="        <groupId>com.github.inspektr</groupId>";
	$f[]="        <artifactId>inspektr-audit</artifactId>";
	$f[]="        <version>\${inspektr.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>com.github.inspektr</groupId>";
	$f[]="        <artifactId>inspektr-common</artifactId>";
	$f[]="        <version>\${inspektr.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>com.github.inspektr</groupId>";
	$f[]="        <artifactId>inspektr-support-spring</artifactId>";
	$f[]="        <version>\${inspektr.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>commons-jexl</groupId>";
	$f[]="        <artifactId>commons-jexl</artifactId>";
	$f[]="        <version>1.1</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.jasig.service.persondir</groupId>";
	$f[]="        <artifactId>person-directory-impl</artifactId>";
	$f[]="        <version>\${person.directory.version}</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>commons-codec</groupId>";
	$f[]="        <artifactId>commons-codec</artifactId>";
	$f[]="        <version>\${commons.codec.version}</version>";
	$f[]="        <scope>compile</scope>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.hibernate</groupId>";
	$f[]="        <artifactId>hibernate-core</artifactId>";
	$f[]="        <version>\${hibernate.core.version}</version>";
	$f[]="        <type>jar</type>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.hibernate</groupId>";
	$f[]="        <artifactId>hibernate-entitymanager</artifactId>";
	$f[]="        <version>\${hibernate.core.version}</version>";
	$f[]="        <type>jar</type>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.hibernate</groupId>";
	$f[]="        <artifactId>hibernate-annotations</artifactId>";
	$f[]="        <version>\${hibernate.core.version}</version>";
	$f[]="        <scope>compile</scope>";
	$f[]="        <type>jar</type>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.hibernate.java-persistence</groupId>";
	$f[]="        <artifactId>jpa-api</artifactId>";
	$f[]="        <version>\${jpa.version}</version>";
	$f[]="        <scope>compile</scope>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <!-- Spring Security Managed Dependencies -->";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.security</groupId>";
	$f[]="        <artifactId>spring-security-cas</artifactId>";
	$f[]="        <version>\${spring.security.version}</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.security</groupId>";
	$f[]="        <artifactId>spring-security-core</artifactId>";
	$f[]="        <version>\${spring.security.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.security</groupId>";
	$f[]="        <artifactId>spring-security-web</artifactId>";
	$f[]="        <version>\${spring.security.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.security</groupId>";
	$f[]="        <artifactId>spring-security-config</artifactId>";
	$f[]="        <version>\${spring.security.version}</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <!-- Spring Managed Dependencies -->";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-aop</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-aspects</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-beans</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-context</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-context-support</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-core</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-instrument</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-jdbc</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-jms</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-orm</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-oxm</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-test</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="        <scope>test</scope>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-tx</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-web</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework</groupId>";
	$f[]="        <artifactId>spring-webmvc</artifactId>";
	$f[]="        <version>\${spring.version}</version>";
	$f[]="      </dependency>";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.webflow</groupId>";
	$f[]="        <artifactId>spring-webflow</artifactId>";
	$f[]="        <version>\${spring.webflow.version}</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>org.springframework</groupId>";
	$f[]="            <artifactId>spring-context</artifactId>";
	$f[]="          </exclusion>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>org.springframework</groupId>";
	$f[]="            <artifactId>spring-web</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.ldap</groupId>";
	$f[]="        <artifactId>spring-ldap-core-tiger</artifactId>";
	$f[]="        <version>\${spring.ldap.version}</version>";
	$f[]="        <scope>compile</scope>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.springframework.ldap</groupId>";
	$f[]="        <artifactId>spring-ldap-core</artifactId>";
	$f[]="        <version>\${spring.ldap.version}</version>";
	$f[]="        <exclusions>";
	$f[]="          <exclusion>";
	$f[]="            <groupId>commons-logging</groupId>";
	$f[]="            <artifactId>commons-logging</artifactId>";
	$f[]="          </exclusion>";
	$f[]="        </exclusions>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>javax.servlet</groupId>";
	$f[]="        <artifactId>servlet-api</artifactId>";
	$f[]="        <version>\${servlet.api.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.aspectj</groupId>";
	$f[]="        <artifactId>aspectjweaver</artifactId>";
	$f[]="        <version>\${aspectj.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.aspectj</groupId>";
	$f[]="        <artifactId>aspectjrt</artifactId>";
	$f[]="        <version>\${aspectj.version}</version>";
	$f[]="      </dependency>";
	$f[]="";
	$f[]="      <dependency>";
	$f[]="        <groupId>org.hibernate</groupId>";
	$f[]="        <artifactId>hibernate-validator</artifactId>";
	$f[]="        <version>\${hibernate.validator.version}</version>";
	$f[]="      </dependency>";
	$f[]="    </dependencies>";
	$f[]="  </dependencyManagement>";
	$f[]="";
	$f[]="  <modules>";
	$f[]="    <module>cas-server-core</module>";
	$f[]="    <module>cas-server-webapp</module>";
	$f[]="    <module>cas-server-support-generic</module>";
	$f[]="    <module>cas-server-support-jdbc</module>";
	$f[]="    <module>cas-server-support-ldap</module>";
	$f[]="    <module>cas-server-support-legacy</module>";
	$f[]="    <module>cas-server-support-openid</module>";
	$f[]="    <module>cas-server-support-radius</module>";
	$f[]="    <module>cas-server-support-spnego</module>";
	$f[]="    <module>cas-server-support-trusted</module>";
	$f[]="    <module>cas-server-support-x509</module>";
	$f[]="    <module>cas-server-support-oauth</module>";
	$f[]="    <module>cas-server-integration-jboss</module>";
	$f[]="    <module>cas-server-integration-memcached</module>";
	$f[]="    <module>cas-server-integration-ehcache</module>";
	$f[]="    <module>cas-server-integration-restlet</module>";
	$f[]="    <module>cas-server-uber-webapp</module>";
	$f[]="    <module>cas-server-documentation</module>";
	$f[]="    <module>cas-server-extension-clearpass</module>";
	$f[]="  </modules>";
	$f[]="";
	$f[]="  <reporting>";
	$f[]="    <plugins>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-project-info-reports-plugin</artifactId>";
	$f[]="        <version>2.4</version>";
	$f[]="        <reportSets>";
	$f[]="          <reportSet>";
	$f[]="            <reports>";
	$f[]="              <report>index</report>";
	$f[]="              <report>project-team</report>";
	$f[]="              <report>mailing-list</report>";
	$f[]="              <report>issue-tracking</report>";
	$f[]="              <report>license</report>";
	$f[]="              <report>scm</report>";
	$f[]="            </reports>";
	$f[]="          </reportSet>";
	$f[]="        </reportSets>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-checkstyle-plugin</artifactId>";
	$f[]="        <version>2.9.1</version>";
	$f[]="      </plugin>";
	$f[]="      <!--";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-javadoc-plugin</artifactId> ";
	$f[]="        <configuration>";
	$f[]="          <minmemory>128m</minmemory>";
	$f[]="          <maxmemory>512</maxmemory>";
	$f[]="        </configuration> ";
	$f[]="      </plugin>-->";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-jxr-plugin</artifactId>";
	$f[]="        <version>2.3</version>";
	$f[]="      </plugin>";
	$f[]="      <plugin>";
	$f[]="        <groupId>org.apache.maven.plugins</groupId>";
	$f[]="        <artifactId>maven-pmd-plugin</artifactId>";
	$f[]="        <version>2.7.1</version>";
	$f[]="      </plugin>";
	$f[]="    </plugins>";
	$f[]="  </reporting>";
	$f[]="";
	$f[]="  <profiles>";
	$f[]="    <profile>";
	$f[]="      <id>ci</id>";
	$f[]="      <build>";
	$f[]="        <plugins>";
	$f[]="          <plugin>";
	$f[]="            <groupId>org.apache.maven.plugins</groupId>";
	$f[]="            <artifactId>maven-source-plugin</artifactId>";
	$f[]="            <version>2.2</version>";
	$f[]="            <executions>";
	$f[]="              <execution>";
	$f[]="                <id>attach-sources</id>";
	$f[]="                <goals>";
	$f[]="                  <goal>jar</goal>";
	$f[]="                </goals>";
	$f[]="              </execution>";
	$f[]="            </executions>";
	$f[]="          </plugin>";
	$f[]="          <plugin>";
	$f[]="            <groupId>org.apache.maven.plugins</groupId>";
	$f[]="            <artifactId>maven-javadoc-plugin</artifactId>";
	$f[]="            <version>2.8</version>";
	$f[]="            <configuration>";
	$f[]="              <charset>UTF-8</charset>";
	$f[]="              <encoding>UTF-8</encoding>";
	$f[]="              <docencoding>UTF-8</docencoding>";
	$f[]="            </configuration>";
	$f[]="            <executions>";
	$f[]="              <execution>";
	$f[]="                <id>attach-javadocs</id>";
	$f[]="                <goals>";
	$f[]="                  <goal>jar</goal>";
	$f[]="                </goals>";
	$f[]="              </execution>";
	$f[]="            </executions>";
	$f[]="          </plugin>";
	$f[]="        </plugins>";
	$f[]="      </build>";
	$f[]="    </profile>";
	$f[]="  </profiles>";
	$f[]="  ";
	$f[]="  <properties>";
	$f[]="    <issues.projectKey>CAS</issues.projectKey>";
	$f[]="    <spring.webflow.version>2.3.0.RELEASE</spring.webflow.version>";
	$f[]="    <spring.version>3.1.1.RELEASE</spring.version>";
	$f[]="    <spring.ldap.version>1.3.1.RELEASE</spring.ldap.version>";
	$f[]="    <spring.security.version>3.1.0.RELEASE</spring.security.version>";
	$f[]="    <clover.version>2.6.3</clover.version>";
	$f[]="    <aspectj.version>1.6.10</aspectj.version>";
	$f[]="    <javax.validation.version>1.0.0.GA</javax.validation.version>";
	$f[]="    <perf4j.version>0.9.14</perf4j.version>";
	$f[]="    <commons.jexl.version>1.1</commons.jexl.version>";
	$f[]="    <hibernate.validator.version>4.2.0.Final</hibernate.validator.version>";
	$f[]="    <hibernate.core.version>4.1.0.Final</hibernate.core.version>";
	$f[]="    <slf4j.version>1.7.1</slf4j.version>";
	$f[]="    <person.directory.version>1.5.1</person.directory.version>";
	$f[]="    <servlet.api.version>2.5</servlet.api.version>";
	$f[]="    <jpa.version>2.0-cr-1</jpa.version>";
	$f[]="    <commons.codec.version>1.4</commons.codec.version>";
	$f[]="    <log4j.version>1.2.15</log4j.version>";
	$f[]="    <junit.version>4.10</junit.version>";
	$f[]="    <commons.lang.version>2.5</commons.lang.version>";
	$f[]="    <inspektr.version>1.0.7.GA</inspektr.version>";
	$f[]="    <commons.io.version>2.0</commons.io.version>";
	$f[]="    <mockito.version>1.9.0</mockito.version>";
	$f[]="    <jdk.version>1.6</jdk.version>";
	$f[]="  </properties>";
	$f[]="</project>\n";
	@file_put_contents("/usr/share/cas-server/pom.xml", @implode("\n", $f));
	echo "Starting......: ".date("H:i:s")." C.A.S /usr/share/cas-server/pom.xml done...\n";
}

function log4jxml(){
	$f[]="<?xml version=\"1.0\" encoding=\"UTF-8\" ?>";
	$f[]="<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">";
	$f[]="<log4j:configuration debug=\"false\" xmlns:log4j=\"http://jakarta.apache.org/log4j/\">";
	$f[]="    <appender name=\"console\" class=\"org.apache.log4j.ConsoleAppender\">";
	$f[]="        <layout class=\"org.apache.log4j.PatternLayout\">";
	$f[]="            <param name=\"ConversionPattern\" value=\"%d %p [%c] - &lt;%m&gt;%n\"/>";
	$f[]="        </layout>";
	$f[]="    </appender>";
	$f[]="";
	$f[]="    <appender name=\"cas\" class=\"org.apache.log4j.RollingFileAppender\">";
	$f[]="        <param name=\"File\" value=\"/var/log/tomcat6/cas.log\" />";
	$f[]="        <param name=\"MaxFileSize\" value=\"512KB\" />";
	$f[]="        <param name=\"MaxBackupIndex\" value=\"3\" />";
	$f[]="        <layout class=\"org.apache.log4j.PatternLayout\">";
	$f[]="            <param name=\"ConversionPattern\" value=\"%d %p [%c] - %m%n\"/>";
	$f[]="        </layout>";
	$f[]="    </appender>";
	$f[]="";
	$f[]="    <!-- Perf4J appenders -->";
	$f[]="    <!--";
	$f[]="       This AsyncCoalescingStatisticsAppender groups StopWatch log messages";
	$f[]="       into GroupedTimingStatistics messages which it sends on the";
	$f[]="       file appender defined below";
	$f[]="    -->";
	$f[]="    <appender name=\"CoalescingStatistics\" class=\"org.perf4j.log4j.AsyncCoalescingStatisticsAppender\">";
	$f[]="        <param name=\"TimeSlice\" value=\"60000\"/>";
	$f[]="        <appender-ref ref=\"fileAppender\"/>";
	$f[]="        <appender-ref ref=\"graphExecutionTimes\"/>";
	$f[]="        <appender-ref ref=\"graphExecutionTPS\"/>";
	$f[]="    </appender>";
	$f[]="";
	$f[]="    <!-- This file appender is used to output aggregated performance statistics -->";
	$f[]="    <appender name=\"fileAppender\" class=\"org.apache.log4j.FileAppender\">";
	$f[]="        <param name=\"File\" value=\"/var/log/tomcat6/perfStats.log\"/>";
	$f[]="        <layout class=\"org.apache.log4j.PatternLayout\">";
	$f[]="            <param name=\"ConversionPattern\" value=\"%m%n\"/>";
	$f[]="        </layout>";
	$f[]="    </appender>";
	$f[]="";
	$f[]="    <appender name=\"graphExecutionTimes\" class=\"org.perf4j.log4j.GraphingStatisticsAppender\">";
	$f[]="        <!-- Possible GraphTypes are Mean, Min, Max, StdDev, Count and TPS -->";
	$f[]="        <param name=\"GraphType\" value=\"Mean\"/>";
	$f[]="        <!-- The tags of the timed execution blocks to graph are specified here -->";
	$f[]="        <param name=\"TagNamesToGraph\" value=\"DESTROY_TICKET_GRANTING_TICKET,GRANT_SERVICE_TICKET,GRANT_PROXY_GRANTING_TICKET,VALIDATE_SERVICE_TICKET,CREATE_TICKET_GRANTING_TICKET,AUTHENTICATE\" />";
	$f[]="    </appender>";
	$f[]="";
	$f[]="    <appender name=\"graphExecutionTPS\" class=\"org.perf4j.log4j.GraphingStatisticsAppender\">";
	$f[]="        <param name=\"GraphType\" value=\"TPS\" />";
	$f[]="        <param name=\"TagNamesToGraph\" value=\"DESTROY_TICKET_GRANTING_TICKET,GRANT_SERVICE_TICKET,GRANT_PROXY_GRANTING_TICKET,VALIDATE_SERVICE_TICKET,CREATE_TICKET_GRANTING_TICKET,AUTHENTICATE\" />";
	$f[]="    </appender>";
	$f[]="";
	$f[]="    <!-- Loggers -->";
	$f[]="    <!--";
	$f[]="      The Perf4J logger. Note that org.perf4j.TimingLogger is the value of the";
	$f[]="      org.perf4j.StopWatch.DEFAULT_LOGGER_NAME constant. Also, note that";
	$f[]="      additivity is set to false, which is usually what is desired - this means";
	$f[]="      that timing statements will only be sent to this logger and NOT to";
	$f[]="      upstream loggers.";
	$f[]="    -->";
	$f[]="    <logger name=\"org.perf4j.TimingLogger\" additivity=\"false\">";
	$f[]="        <level value=\"INFO\" />";
	$f[]="        <appender-ref ref=\"CoalescingStatistics\" />";
	$f[]="    </logger>";
	$f[]="";
	$f[]="    <!--";
	$f[]="        WARNING: Setting the org.springframework logger to DEBUG displays debug information about";
	$f[]="        the request parameter values being bound to the command objects.  This could expose your";
	$f[]="        password in the log file.  If you are sharing your log files, it is recommend you selectively";
	$f[]="        apply DEBUG level logging on a an org.springframework.* package level (i.e. org.springframework.dao)";
	$f[]="    -->";
	$f[]="    <logger name=\"org.springframework\">";
	$f[]="        <level value=\"WARN\" />";
	$f[]="    </logger>";
	$f[]="";
	$f[]="    <logger name=\"org.springframework.webflow\">";
	$f[]="        <level value=\"WARN\" />";
	$f[]="    </logger>";
	$f[]="";
	$f[]="    <logger name=\"org.jasig\" additivity=\"true\">";
	$f[]="        <level value=\"INFO\" />";
	$f[]="        <appender-ref ref=\"cas\" />";
	$f[]="    </logger>";
	$f[]="";
	$f[]="    <logger name=\"com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager\">";
	$f[]="        <level value=\"INFO\" />";
	$f[]="        <appender-ref ref=\"cas\" />";
	$f[]="    </logger>";
	$f[]="";
	$f[]="    <!--";
	$f[]="        WARNING: Setting the flow package to DEBUG will display";
	$f[]="        the parameters posted to the login servlet including";
	$f[]="        cleartext authentication credentials";
	$f[]="    -->";
	$f[]="    <logger name=\"org.jasig.cas.web.flow\" additivity=\"true\">";
	$f[]="        <level value=\"INFO\" />";
	$f[]="        <appender-ref ref=\"cas\" />";
	$f[]="    </logger>";
	$f[]="";
	$f[]="    <!--";
	$f[]="      The root logger sends all log statements EXCEPT those sent to the perf4j";
	$f[]="      logger to System.out.";
	$f[]="    -->";
	$f[]="    <root>";
	$f[]="        <level value=\"ERROR\" />";
	$f[]="        <appender-ref ref=\"console\" />";
	$f[]="    </root>";
	$f[]="</log4j:configuration>";	
	@file_put_contents("/var/lib/tomcat6/webapps/cas/WEB-INF/classes/log4j.xml",@implode("\n", $f));
	echo "Starting......: ".date("H:i:s")." C.A.S log4j.xml done...\n";
}


function tomcat_config(){
	@mkdir("/usr/share/tomcat6/server/classes",0775,true);
	@mkdir("/usr/share/tomcat6/shared/classes",0775,true);
	$f[]="<?xml version='1.0' encoding='utf-8'?>";
	$f[]="<!-- Note:  A \"Server\" is not itself a \"Container\", so you may not";
	$f[]="     define subcomponents such as \"Valves\" at this level.";
	$f[]="     Documentation at /docs/config/server.html";
	$f[]=" -->";
	$f[]="<Server port=\"8005\" shutdown=\"SHUTDOWN\">";
	$f[]="";
	$f[]="  <!--APR library loader. Documentation at /docs/apr.html -->";
	$f[]="  <!--";
	$f[]="  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\" />";
	$f[]="  -->";
	$f[]="  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->";
	$f[]="  <Listener className=\"org.apache.catalina.core.JasperListener\" />";
	$f[]="  <!-- Prevent memory leaks due to use of particular java/javax APIs-->";
	$f[]="  <Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\" />";
	$f[]="  <!-- JMX Support for the Tomcat server. Documentation at /docs/non-existent.html -->";
	$f[]="  <Listener className=\"org.apache.catalina.mbeans.ServerLifecycleListener\" />";
	$f[]="  <Listener className=\"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\" />";
	$f[]="";
	$f[]="  <!-- Global JNDI resources";
	$f[]="       Documentation at /docs/jndi-resources-howto.html";
	$f[]="  -->";
	$f[]="  <GlobalNamingResources>";
	$f[]="    <!-- Editable user database that can also be used by";
	$f[]="         UserDatabaseRealm to authenticate users";
	$f[]="    -->";
	$f[]="    <Resource name=\"UserDatabase\" auth=\"Container\"";
	$f[]="              type=\"org.apache.catalina.UserDatabase\"";
	$f[]="              description=\"User database that can be updated and saved\"";
	$f[]="              factory=\"org.apache.catalina.users.MemoryUserDatabaseFactory\"";
	$f[]="              pathname=\"conf/tomcat-users.xml\" />";
	$f[]="  </GlobalNamingResources>";
	$f[]="";
	$f[]="  <Service name=\"Catalina\">";
	$f[]="  ";
	$f[]="    <!--The connectors can use a shared executor, you can define one or more named thread pools-->";
	$f[]="    <!--";
	$f[]="    <Executor name=\"tomcatThreadPool\" namePrefix=\"catalina-exec-\" ";
	$f[]="        maxThreads=\"150\" minSpareThreads=\"4\"/>";
	$f[]="    -->";
	$f[]="    ";
	$f[]="    ";
	$f[]="    <Connector port=\"8009\"";
	$f[]="               debug=\"0\"";
	$f[]="               enableLookups=\"false\"";
	$f[]="               protocol=\"AJP/1.3\" ";
	$f[]="               tomcatAuthentication=\"false\" ";
	$f[]="               redirectPort=\"8443\" />";
	$f[]="    ";
	$f[]="    ";
	$f[]="    <!-- A \"Connector\" using the shared thread pool-->";
	$f[]="    <!--";
	$f[]="    <Connector executor=\"tomcatThreadPool\"";
	$f[]="               port=\"8080\" protocol=\"HTTP/1.1\" ";
	$f[]="               connectionTimeout=\"20000\" ";
	$f[]="               redirectPort=\"8443\" />";
	$f[]="    -->           ";
	$f[]="    <!-- Define a SSL HTTP/1.1 Connector on port 8443";
	$f[]="         This connector uses the JSSE configuration, when using APR, the ";
	$f[]="         connector should be using the OpenSSL style configuration";
	$f[]="         described in the APR documentation -->";
	$f[]="    <!--";
	$f[]="    <Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"";
	$f[]="               maxThreads=\"150\" scheme=\"https\" secure=\"true\"";
	$f[]="               clientAuth=\"false\" sslProtocol=\"TLS\" />";
	$f[]="    -->";
	$f[]="    <!-- An Engine represents the entry point (within Catalina) that processes";
	$f[]="         every request.  The Engine implementation for Tomcat stand alone";
	$f[]="         analyzes the HTTP headers included with the request, and passes them";
	$f[]="         on to the appropriate Host (virtual host).";
	$f[]="         Documentation at /docs/config/engine.html -->";
	$f[]="";
	$f[]="    <!-- You should set jvmRoute to support load-balancing via AJP ie :";
	$f[]="    <Engine name=\"Catalina\" defaultHost=\"localhost\" jvmRoute=\"jvm1\">         ";
	$f[]="    --> ";
	$f[]="    <Engine name=\"Catalina\" defaultHost=\"localhost\">";
	$f[]="";
	$f[]="      <!--For clustering, please take a look at documentation at:";
	$f[]="          /docs/cluster-howto.html  (simple how to)";
	$f[]="          /docs/config/cluster.html (reference documentation) -->";
	$f[]="      <!--";
	$f[]="      <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/>";
	$f[]="      -->        ";
	$f[]="";
	$f[]="      <!-- The request dumper valve dumps useful debugging information about";
	$f[]="           the request and response data received and sent by Tomcat.";
	$f[]="           Documentation at: /docs/config/valve.html -->";
	$f[]="      <!--";
	$f[]="      <Valve className=\"org.apache.catalina.valves.RequestDumperValve\"/>";
	$f[]="      -->";
	$f[]="";
	$f[]="      <!-- This Realm uses the UserDatabase configured in the global JNDI";
	$f[]="           resources under the key \"UserDatabase\".  Any edits";
	$f[]="           that are performed against this UserDatabase are immediately";
	$f[]="           available for use by the Realm.  -->";
	$f[]="      <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"";
	$f[]="             resourceName=\"UserDatabase\"/>";
	$f[]="";
	$f[]="      <!-- Define the default virtual host";
	$f[]="           Note: XML Schema validation will not work with Xerces 2.2.";
	$f[]="       -->";
	$f[]="      <Host name=\"localhost\"  appBase=\"webapps\"";
	$f[]="            unpackWARs=\"true\" autoDeploy=\"true\"";
	$f[]="            xmlValidation=\"false\" xmlNamespaceAware=\"false\">";
	$f[]="";
	$f[]="        <!-- SingleSignOn valve, share authentication between web applications";
	$f[]="             Documentation at: /docs/config/valve.html -->";
	$f[]="        <!--";
	$f[]="        <Valve className=\"org.apache.catalina.authenticator.SingleSignOn\" />";
	$f[]="        -->";
	$f[]="";
	$f[]="        <!-- Access log processes all example.";
	$f[]="             Documentation at: /docs/config/valve.html -->";
	$f[]="        <!--";
	$f[]="        <Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"  ";
	$f[]="               prefix=\"localhost_access_log.\" suffix=\".txt\" pattern=\"common\" resolveHosts=\"false\"/>";
	$f[]="        -->";
	$f[]="";
	$f[]="      </Host>";
	$f[]="    </Engine>";
	$f[]="  </Service>";
	$f[]="</Server>";
	$f[]="";
	@file_put_contents("/etc/tomcat6/server.xml", @implode("\n", $f));
	echo "Starting......: ".date("H:i:s")." C.A.S /etc/tomcat6/server.xml done...\n";
	
}