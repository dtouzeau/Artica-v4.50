<?php
	include_once(dirname(__FILE__).'/ressources/class.templates.inc'); 
	include_once('ressources/class.ldap.inc');
	include_once('ressources/class.users.menus.inc');
	include_once('ressources/class.mysql.inc');
	include_once(dirname(__FILE__).'/ressources/class.os.system.inc');
	include_once(dirname(__FILE__).'/framework/frame.class.inc');
	include_once(dirname(__FILE__).'/framework/class.unix.inc');if(!isset($GLOBALS["CLASS_SOCKETS"])){if(!class_exists("sockets")){include_once("/usr/share/artica-postfix/ressources/class.sockets.inc");}$GLOBALS["CLASS_SOCKETS"]=new sockets();}
	
	if(!isset($GLOBALS["CLASS_SOCKETS"])){if(!class_exists("sockets")){include_once("/usr/share/artica-postfix/ressources/class.sockets.inc");}$GLOBALS["CLASS_SOCKETS"]=new sockets();}if(function_exists("posix_getuid")){if(posix_getuid()<>0){die("Cannot be used in web server mode\n\n");}}
	if(preg_match("#--verbose#",implode(" ",$argv))){$GLOBALS["VERBOSE"]=true;}
	
	CheckTables();
	build_root_cf();
	build_maincf();
	exit();
	
	
	
	
	
	
	
	
	
	
	
	function CheckTables(){
		$mysql=new mysql();
		
		if(!$mysql->CheckTablesPostfilter()){
			echo "Starting......: ".date("H:i:s")." PostFilter failed to build mysql tables\n";
		}else{
			echo "Starting......: ".date("H:i:s")." PostFilter mysql tables ok\n";
		}
		}
		
		
	function build_root_cf(){
		$mysql=new mysql();
		$cf[]="syslog_facility	= mail";
		$cf[]="db_host = $mysql->mysql_server:$mysql->mysql_port";
		$cf[]="db_user = $mysql->mysql_admin";
		$cf[]="db_passwd = $mysql->mysql_password";
		$cf[]="master_db_name = postfilter";
		@file_put_contents("/etc/postfilter/root.cf",@implode("\n",$cf));
		echo "Starting......: ".date("H:i:s")." PostFilter building root.cf ok\n";
		}
		
		
	function build_maincf(){

				$cf[]="# Postfilter config file";
				$cf[]="#";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Postfilter policy daemon settings";
				$cf[]="#";
				$cf[]="";
				$cf[]="# Local TCP port to listen to ";
				$cf[]="daemon_port	= 10255";
				$cf[]="# User and group the process changes to";
				$cf[]="daemon_user	= postfix";
				$cf[]="daemon_group	= postfix";
				$cf[]="# Chroot directory";
				$cf[]="daemon_chroot	= /";
				$cf[]="# Net::Server::PreFork parameters";
				$cf[]="daemon_min_servers = 2";
				$cf[]="daemon_min_spare_servers = 2";
				$cf[]="daemon_max_spare_servers = 10";
				$cf[]="daemon_max_servers = 100";
				$cf[]="daemon_max_requests = 200";
				$cf[]="daemon_log_level = 2";
				$cf[]="# Reload the main configuration from the database automatically";
				$cf[]="# after so many seconds is elapsed. By setting to zero";
				$cf[]="# reloading is disabled.";
				$cf[]="daemon_reload_config = 10*60	# every ten minutes";
				$cf[]="";
				$cf[]="# Timeout if evaluating the restrictions takes too long time (for example";
				$cf[]="# due to an overloaded mySQL server).";
				$cf[]="# Should be a little bit shorter than smtpd_policy_service_timeout in Postfix";
				$cf[]="# Default smtpd_policy_service_timeout: 100s";
				$cf[]="daemon_service_timeout = 98";
				$cf[]="";
				$cf[]="# Message returned back to Postfix when the daemon_service_timeout kicks in.";
				$cf[]="daemon_timeout_error = 451 Server too busy, please try later";
				$cf[]="";
				$cf[]="# Message returned back to Postfix when something goes haywire";
				$cf[]="# at reading the database tables";
				$cf[]="daemon_hard_error = 451 Server configuration error";
				$cf[]="";
				$cf[]="# Message returned back to Postfix when something goes haywire";
				$cf[]="# at writing a database table";
				$cf[]="# In a replicated setup:";
				$cf[]="# daemon_soft_error = dunno		";
				$cf[]="# In a standalone SQL server setup";
				$cf[]="# CHANGE ME";
				$cf[]="daemon_soft_error = 451 Server configuration error";
				$cf[]="";
				$cf[]="# Remap domains internally, before calling any ";
				$cf[]="# postfilter restriction checking.";
				$cf[]="# Thus you can map full virtual domains to real ones.";
				$cf[]="# Syntax is map_domain_from:map_domain_to ...";
				$cf[]="# daemon_remap_domains = old.domain:new.domain";
				$cf[]="daemon_remap_domains =";
				$cf[]="";
				$cf[]="# Templates can be defined for every restriction type and";
				$cf[]="# for every restriction type with every valid subject:";
				$cf[]="# daemon_template_<type> = permit|dunno|discard|hold|[45]nn txt";
				$cf[]="# daemon_template_<type>_<subject> = permit|dunno|discard|hold|[45]nn txt";
				$cf[]="#";
				$cf[]="# Mandatory default template which is used ";
				$cf[]="# if no response or template was found.";
				$cf[]="daemon_default_template = ";
				$cf[]="	554 Access denied";
				$cf[]="# Mandatory mark template";
				$cf[]="daemon_mark_template =";
				$cf[]="	X-Postfilter: SPAM marked by {\$lookup_class}: {\$lookup_policy}";
				$cf[]="";
				$cf[]="# Predefined templates";
				$cf[]="daemon_template_rbl = ";
				$cf[]="	554 Service unavailable; {\$lookup_subject} ({\$lookup_what})";
				$cf[]="	blocked using {\$rbl_domain . (\$txt_record ? \": \" . \$txt_record : \"\")} ";
				$cf[]="daemon_template_rhsbl = ";
				$cf[]="	554 Service unavailable; {\$lookup_subject} ({\$lookup_what})";
				$cf[]="	blocked using {\$rbl_domain . (\$txt_record ? \": \" . \$txt_record : \"\")} ";
				$cf[]="daemon_template_invalid_helo_name =";
				$cf[]="	{\$helo_name =~ /^\[/";
				$cf[]="	 ? \"501 <\$helo_name>: Helo command rejected: invalid IP address\" ";
				$cf[]="	 : \"501 <\$helo_name>: Helo command rejected: invalid name\" }";
				$cf[]="daemon_template_non_fqdn_helo_name = ";
				$cf[]="	{\$helo_name =~ /^\[/";
				$cf[]="	 ? \"501 <\$helo_name>: Helo command rejected: invalid IP address\" ";
				$cf[]="	 : \"504 <\$helo_name>: Helo command rejected: need fully-qualified hostname\" }";
				$cf[]="daemon_template_unknown_client_name = ";
				$cf[]="	450 Client host rejected: cannot find your hostname, [{\$client_address}]";
				$cf[]="daemon_template_unknown_helo_name = ";
				$cf[]="	{\$helo_name =~ /^\[/";
				$cf[]="	 ? \"501 <\$helo_name>: Helo command rejected: invalid IP address\" ";
				$cf[]="	 : \"450 <\$helo_name>: Helo command rejected: host not found\" }";
				$cf[]="daemon_template_unknown_recipient = ";
				$cf[]="	550 <{\$recipient}>: Recipient address rejected: user unknown";
				$cf[]="daemon_template_greylist_client = ";
				$cf[]="	450 <{\$recipient}>: Please try again later.";
				$cf[]="daemon_template_captcha_sender = ";
				$cf[]="	550 Sorry, you must verify that you are a human";
				$cf[]="	on the page {\$captcha_url}";
				$cf[]="	in order to be able to send E-mail";
				$cf[]="	as {\$sender} to {\$recipient}.";
				$cf[]="daemon_template_throttle =";
				$cf[]="	450 Sorry, you are over your mail quota. Please try again later.";
				$cf[]=" ";
				$cf[]="#";
				$cf[]="# Captcha related parameters";
				$cf[]="#";
				$cf[]="# Length of string generated as captcha test";
				$cf[]="captcha_length = 8";
				$cf[]="# Timeout for captcha in seconds in the database";
				$cf[]="captcha_timeout = 24*60*60";
				$cf[]="# Maximum time in seconds accepted between displaying the captcha ";
				$cf[]="# on the CGI interface and accepting the response";
				$cf[]="captcha_thinking_time = 30";
				$cf[]="# How many challenges are generated";
				$cf[]="captcha_probes = 5";
				$cf[]="# Captcha CGI URL: CHANGE ME";
				$cf[]="captcha_url = http://localhost/cgi-bin/captcha.cgi ";
				$cf[]="# Temporary directory for captcha.cgi";
				$cf[]="captcha_tmp_dir = /tmp";
				$cf[]="#";
				$cf[]="# Captcha in image";
				$cf[]="#";
				$cf[]="# GD::SecurityImage support";
				$cf[]="# See 'perldoc GD::SecurityImage' for the description ";
				$cf[]="# of the supported parameters.";
				$cf[]="# Colors must be given in hex without the leading '#',";
				$cf[]="# i.e. FFFFFF instead of #FFFFFF.";
				$cf[]="# Naming convention: captcha_image_<function>_<parameter>";
				$cf[]="# GD::SecurityImage::new() parameters: all supported";
				$cf[]="captcha_image_new_width = 500";
				$cf[]="captcha_image_new_height = 80";
				$cf[]="captcha_image_new_lines = 20";
				$cf[]="# Builtin font used at creating the text";
				$cf[]="captcha_image_new_gd_font = large";
				$cf[]="# If defined, captcha_image_new_font overrides ";
				$cf[]="# captcha_image_new_gd_font.";
				$cf[]="# It is either the path to a TrueType font or 'random'";
				$cf[]="# to pick a font randomly from captcha_image_new_ttf_fonts. ";
				$cf[]="captcha_image_new_font = random";
				$cf[]="# TrueType fonts to generate the text: CHANGE ME";
				$cf[]="captcha_image_new_ttf_fonts =";
				$cf[]="        /usr/local/share/fonts/truetype/freefont/FreeSans.ttf";
				$cf[]="        /usr/local/share/fonts/truetype/freefont/FreeSansOblique.ttf";
				$cf[]="        /usr/local/share/fonts/truetype/freefont/FreeSerif.ttf";
				$cf[]="        /usr/local/share/fonts/truetype/freefont/FreeSerifItalic.ttf";
				$cf[]="        /usr/local/share/fonts/truetype/ttf-bitstream-vera/Vera.ttf";
				$cf[]="	/usr/local/share/fonts/truetype/ttf-bitstream-vera/VeraIt.ttf";
				$cf[]="	/usr/local/share/fonts/truetype/ttf-bitstream-vera/VeraSe.ttf";
				$cf[]="captcha_image_new_frame = 0";
				$cf[]="captcha_image_new_thickness = 1";
				$cf[]="captcha_image_new_bgcolor = FFFFFF";
				$cf[]="captcha_image_new_send_ctobg = 1";
				$cf[]="captcha_image_new_ptsize = 24";
				$cf[]="captcha_image_new_scramble = 1";
				$cf[]="# GD::SecurityImage::create() parameters: ";
				$cf[]="# method, style, text_color, line_color";
				$cf[]="captcha_image_create_method = ttf";
				$cf[]="# Style: random, or one of captcha_image_create_styles ";
				$cf[]="captcha_image_create_style = random";
				$cf[]="captcha_image_create_text_color = 000000";
				$cf[]="captcha_image_create_line_color = 000000";
				$cf[]="# Styles";
				$cf[]="captcha_image_create_styles = default rect circle ellipse ec";
				$cf[]="# GD::SecurityImage::particle() parameters: ";
				$cf[]="# density, maxdots";
				$cf[]="captcha_image_particle_density = 3000";
				$cf[]="captcha_image_particle_maxdots = 2";
				$cf[]="# GD::SecurityImage::out() parameters: ";
				$cf[]="# force";
				$cf[]="captcha_image_out_force = png";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Captcha in audio ";
				$cf[]="#";
				$cf[]="# Text to audio file converter program.";
				$cf[]="# Use \$input and \$output to denote the input/output";
				$cf[]="# files on the commandline: CHANGE ME";
				$cf[]="captcha_speech_text2wave =";
				$cf[]="	/usr/local/festival/festival/bin/text2wave -otype wav -o \$output \$input";
				$cf[]="# Complete content type of the output file generated";
				$cf[]="# by text2wave above.";
				$cf[]="captcha_speech_content_type = audio/x-wav";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Policy definitions";
				$cf[]="#";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Global policies for every user";
				$cf[]="#";
				$cf[]="";
				$cf[]="# Check the table of globally blacklisted external clients";
				$cf[]="policy_blacklist_client =";
				$cf[]="	blacklist:client:table=banned_client";
				$cf[]="	550 Access denied. Go away.";
				$cf[]="";
				$cf[]="# Check the table of globally blacklisted sender addresses";
				$cf[]="policy_blacklist_sender =";
				$cf[]="	blacklist:sender:table=banned_sender";
				$cf[]="	550 Access denied. Go away.";
				$cf[]="";
				$cf[]="# Check the table of blacklisted helo names (i.e ours)";
				$cf[]="# and reject if the client uses any of them";
				$cf[]="policy_blacklist_helo =";
				$cf[]="	blacklist:helo_name:table=banned_helo";
				$cf[]="	550 Access denied: faked HELO/EHLO name.";
				$cf[]="";
				$cf[]="# Check the table of blacklisted helo names (i.e ours)";
				$cf[]="# and add the client machines which fake our helo names";
				$cf[]="# to the spamtrap table to ban them for a longer time.";
				$cf[]="#policy_blacklist_helo =";
				$cf[]="#	blacklist:helo_name:table=banned_helo";
				$cf[]="#	update:client_address:table=spamtrap";
				$cf[]="#	550 Access denied: faked HELO/EHLO name.";
				$cf[]="";
				$cf[]="# Relay to third party servers for which ";
				$cf[]="# we do not know the valid addresses or don't";
				$cf[]="# want to force to use Postfilter";
				$cf[]="#policy_relay =";
				$cf[]="#	whitelist:recipient_domain:table=pass_relay_domains";
				$cf[]="";
				$cf[]="# Update spamtrap table if client wants to send a message";
				$cf[]="# to one of our honeypot addresses/patterns";
				$cf[]="# Skip null senders in the case spammers forge our honeypot";
				$cf[]="# addresses as senders (it happened here...)";
				$cf[]="policy_update_spamtrap = ";
				$cf[]="	blacklist:recipient:table=honeypot";
				$cf[]="	regexp:sender:pattern=/^<>\$/:match=dunno:nomatch=reject";
				$cf[]="	update:client_address:table=spamtrap";
				$cf[]="	discard Client trapped in spamtrap";
				$cf[]="";
				$cf[]="# Check my users when sending mail:";
				$cf[]="# throttle and update user whitelists where enabled";
				$cf[]="# CHANGEME";
				$cf[]="policy_my_users =";
				$cf[]="	# Match either authenticated sender or mynetwork client";
				$cf[]="	or_group:begin";
				$cf[]="	authenticated:sasl:match=reject:nomatch=dunno";
				$cf[]="	regexp:client_address:pattern=/^192\.168\.0\./:match=reject:nomatch=dunno";
				$cf[]="	or_group:end";
				$cf[]="	# Update user whitelist, where enabled";
				$cf[]="	# If sender is on the list, accept it otherwise continue";
				$cf[]="	# with the restrictions on this list. ";
				$cf[]="	filter:sender:table=user:enable=auto_whitelist:default=reject";
				$cf[]="	# Throttle our users: reject or explicitly permit";
				$cf[]="	throttle:sasl_username";
				$cf[]="	:count_max=500:rcpt_max=1000";
				$cf[]="	:quota_max=500*1024*1024:time_period=60*60";
				$cf[]="	:match=reject:nomatch=permit";
				$cf[]="";
				$cf[]="# User whitelist: lookup the sender address in the user_whitelist";
				$cf[]="# table indexed by the recipient address and if the sender is found,";
				$cf[]="# let the message in.";
				$cf[]="policy_user_whitelist = user_list:recipient:table=user_whitelist:lookup=sender";
				$cf[]="";
				$cf[]="# Apply the spam filtering settings of the recipient for incoming messages";
				$cf[]="# by disabling the policy applied for outgoing messages";
				$cf[]="policy_filter = filter:recipient:table=user:disable=auto_whitelist";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Policies which are available for the users";
				$cf[]="# directly (expert users) or indirectly (novice users, via classes)";
				$cf[]="#";
				$cf[]="";
				$cf[]="# Check spamtrap table and discard clients found in it";
				$cf[]="policy_spamtrap = ";
				$cf[]="	blacklist:client_address:table=spamtrap";
				$cf[]="	discard Client trapped in spamtrap";
				$cf[]="";
				$cf[]="# Check dha table and reject clients found in it";
				$cf[]="policy_dha = ";
				$cf[]="        counter:client_address:table=dha:check:limit=5";
				$cf[]="        550 Too many probes, access denied.";
				$cf[]="";
				$cf[]="# Auto-whitelist my recipient when I send an E-mail";
				$cf[]="policy_auto_whitelist =";
				$cf[]="	update:recipient:table=user_whitelist:type=user_list";
				$cf[]="	# update returns reject so we need an explicit permit here:";
				$cf[]="	permit";
				$cf[]="";
				$cf[]="# Local blacklist table based on client address/hostname/domainname";
				$cf[]="policy_blacklist = ";
				$cf[]="	blacklist:client:table=blacklist";
				$cf[]="	550 Access denied. Your site is banned because of the unsolicited mail messages received from it.";
				$cf[]="";
				$cf[]="# Greylist yet-unseen senders		  ";
				$cf[]="policy_greylist = ";
				$cf[]="	lookup:client_address:table=greylist_white:match=permit:nomatch=reject";
				$cf[]="	greylist:client:delay=5*60:whitelist=50,";
				$cf[]="	450 Service is administratively unavailable, try again later.";
				$cf[]="";
				$cf[]="# Policies constructed from the basic restrictions";
				$cf[]="policy_non_fqdn_helo = non_fqdn:helo_name";
				$cf[]="";
				$cf[]="policy_unknown_client = unknown:client_name";
				$cf[]="policy_unknown_helo = unknown:helo_name";
				$cf[]="policy_unknown_recipient = ";
				$cf[]="	unknown:recipient";
				$cf[]="	# Update dha table to catch directory harvest attackers";
				$cf[]="        counter:client_address:table=dha:limit=5:time_period=3*60:match=reject:nomatch=reject";
				$cf[]="        550 <{\$recipient}>: Recipient address rejected: user unknown";
				$cf[]="";
				$cf[]="";
				$cf[]="# RBL and RHSBL policies";
				$cf[]="policy_ordb = rbl:client_address:domain=relays.ordb.org";
				$cf[]="policy_spamhaus = rbl:client_address:domain=sbl.spamhaus.org";
				$cf[]="policy_cbl = rbl:client_address:domain=cbl.abuseat.org";
				$cf[]="";
				$cf[]="# Recipient address ccepts senders from user whitelist ";
				$cf[]="# and passing captcha test";
				$cf[]="policy_closed = captcha:sender";
				$cf[]="";
				$cf[]="# Recipient address accepts senders from";
				$cf[]="# user whitelist only";
				$cf[]="policy_really_closed = 550 Recipient does not accept your mail.";
				$cf[]="";
				$cf[]="# Marker policies: system must put them at the";
				$cf[]="# end of the list of the user policies";
				$cf[]="policy_report = permit";
				$cf[]="policy_content_filter = permit";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Class definitions";
				$cf[]="#";
				$cf[]="";
				$cf[]="# Postfilter classes are built from policies defined above.";
				$cf[]="# There are built-in classes (full, expert and slave) which you don't";
				$cf[]="# have to (and cannot) define.";
				$cf[]="";
				$cf[]="# The definition of the non-built-in classes";
				$cf[]="class_none = report";
				$cf[]="# Minimal filtering: check spamtrap database, apply auto-whitelisting,";
				$cf[]="# check greylist and trigger reporting";
				$cf[]="class_minimal = spamtrap dha greylist auto_whitelist report";
				$cf[]="# Medium filtering: minimal, plus check some RBL database";
				$cf[]="class_medium = spamtrap dha greylist ordb dsbl opm auto_whitelist report";
				$cf[]="# Full filtering: all policies from cgi_expert_policies";
				$cf[]="# Closed: auto-whitelist when sending, check whitelist and apply captcha";
				$cf[]="# when receiving";
				$cf[]="class_closed = auto_whitelist closed report";
				$cf[]="# Really-closed: do not apply captcha";
				$cf[]="class_really_closed = auto_whitelist really_closed report";
				$cf[]="class_content_filter = content_filter";
				$cf[]="";
				$cf[]="# The heart of the policy daemon:";
				$cf[]="# default class which is applied for every policy request ";
				$cf[]="# CHANGE ME";
				$cf[]="daemon_default_recipient_class =";
				$cf[]="	my_users			# my users: throttle or update user whitelits";
				$cf[]="	# External/unauthenticated clients:";
				$cf[]="	update_spamtrap			# update spamtrap";
				$cf[]="	#relay				# relay to servers with unknown addresses";
				$cf[]="	blacklist_client		# blacklisted clients";
				$cf[]="	blacklist_sender		# blacklisted senders";
				$cf[]="	blacklist_helo			# blacklisted helo names";
				$cf[]="	unknown_recipient		# reject unknown recipients";
				$cf[]="	user_whitelist			# check user whitelist";
				$cf[]="	filter				# continue with user settings";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Webserver, CGI script";
				$cf[]="#";
				$cf[]="# The URL of the postfilter.cgi script: CHANGE ME";
				$cf[]="cgi_url = https://localhost/cgi-bin/postfilter.cgi";
				$cf[]="# Templates directory";
				$cf[]="cgi_templates = //templates";
				$cf[]="# CSS style file: CHANGE ME";
				$cf[]="cgi_style = /images/postfilter.css";
				$cf[]="# Maintenance mode disabled/enabled (0/1). ";
				$cf[]="cgi_maintenance = 0";
				$cf[]="# Languages supported on the CGI interfaces.";
				$cf[]="cgi_languages = en hu";
				$cf[]="# Default languages for the postfilter and captcha pages:";
				$cf[]="cgi_lang_default_captcha = en";
				$cf[]="cgi_lang_default_postfilter = hu";
				$cf[]="# Language names in the order of cgi_languages";
				$cf[]="cgi_lang_en_name = English Hungarian";
				$cf[]="cgi_lang_hu_name = angol magyar";
				$cf[]="# Language locale, image template and character set.";
				$cf[]="cgi_lang_en_locale = en-US";
				$cf[]="cgi_lang_hu_locale = hu-HU";
				$cf[]="# CHANGE ME";
				$cf[]="cgi_lang_en_img = <img src=\"/images/uk.png\" alt=\"English\">";
				$cf[]="cgi_lang_hu_img = <img src=\"/images/hu.png\" alt=\"Magyar\">";
				$cf[]="cgi_lang_en_charset = ISO-8859-1";
				$cf[]="cgi_lang_hu_charset = ISO-8859-2";
				$cf[]="cgi_lang_en_it_group = IT";
				$cf[]="cgi_lang_hu_it_group = IT";
				$cf[]="# Logo";
				$cf[]="cgi_logo = <a href=\"http://www.kfki.hu/cnc/projekt/postfilter\">";
				$cf[]="	   <img border=0 src=\"/images/postfilter.png\"></a>";
				$cf[]="# Command by which the CGI script can send E-mail";
				$cf[]="cgi_sendmail	= /usr/lib/sendmail -t";
				$cf[]="# E-mail address used as sender in the messages sent by the CGI";
				$cf[]="# CHANGE ME";
				$cf[]="cgi_admin_email = abuse@your.domain";
				$cf[]="# CHANGE ME";
				$cf[]="# List of administrators";
				$cf[]="cgi_admins	= foo@your.domain";
				$cf[]="# Length of cookie for sessions";
				$cf[]="cgi_cookie_session = 32";
				$cf[]="# Length of cookie as one time password for login";
				$cf[]="cgi_cookie_login = 16";
				$cf[]="# Session cookie timeout in seconds. After this time elapsed";
				$cf[]="# user must log in again.";
				$cf[]="cgi_cookie_timeout = 60*60";
				$cf[]="# Users may disable quota (throttling) for the given amount of time";
				$cf[]="# in seconds (if 0, disabling quota is not supported)";
				$cf[]="cgi_disable_throttle = 60*60";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Error and information message templates";
				$cf[]="# The following variables are available:";
				$cf[]="#";
				$cf[]="#	\$login			login address";
				$cf[]="#	\$email			master address (same as login, except for admins)";
				$cf[]="#	\$alternate_address	alternate address user typed in";
				$cf[]="# Database error or other general error condition";
				$cf[]="cgi_message_en_internal_error = Internal error, please turn to the system administrator!";
				$cf[]="cgi_message_hu_internal_error = Rendszerhiba, kérem forduljon a rendszergazdához!";
				$cf[]="# Login address does not exists";
				$cf[]="cgi_message_en_login_not_exists = Address {\$login} does not exists";
				$cf[]="cgi_message_hu_login_not_exists = {\$login} nem létezõ E-mail cím";
				$cf[]="# Login cookie sent to given address";
				$cf[]="cgi_message_en_login_cookie_sent = The one time password has been posted to {\$login}.";
				$cf[]="cgi_message_hu_login_cookie_sent = Az egyszer használatos jelszót postáztam a {\$login} címre.";
				$cf[]="# Alternate address does not exists";
				$cf[]="cgi_message_en_alternate_not_exists = Address {\$alternate_address} does not exists";
				$cf[]="cgi_message_hu_alternate_not_exists = {\$alternate_address} nem létezõ E-mail cím";
				$cf[]="# Address cannot be specified as alternate, as it's already bound to";
				$cf[]="# a master address";
				$cf[]="cgi_message_en_alternate_already_bound = Address {\$alternate_address} is already bound to an address.";
				$cf[]="cgi_message_hu_alternate_already_bound = {\$alternate_address} cím már le van kötve.";
				$cf[]="# Cookie belonging to the login address does not exist.";
				$cf[]="cgi_message_en_cookie_not_exists = Cookie does not exists.";
				$cf[]="cgi_message_hu_cookie_not_exists = Hiányzó kulcs.";
				$cf[]="# Cookie timed out";
				$cf[]="cgi_message_en_cookie_timed_out = Expired cookie, please login again.";
				$cf[]="cgi_message_hu_cookie_timed_out = Lejárt kulcs, kérem jelentkezzen be újra.";
				$cf[]="# Invalid cookie: cookie sent by the client and what can be found in the";
				$cf[]="# database does not match.";
				$cf[]="cgi_message_en_invalid_cookie = Invalid cookie.";
				$cf[]="cgi_message_hu_invalid_cookie = Érvénytelen kulcs.";
				$cf[]="# Invalid login, user address does not exist";
				$cf[]="cgi_message_en_invalid_login = Invalid login.";
				$cf[]="cgi_message_hu_invalid_login = Érvénytelen bejelentkezés.";
				$cf[]="# User typed a slave/alternate address to login";
				$cf[]="cgi_message_en_use_master = Use your master address {\$email} to login";
				$cf[]="cgi_message_hu_use_master = {\$email} E-mail címével jelentkezzen be.";
				$cf[]="# Invalid login, password does not match";
				$cf[]="cgi_message_en_invalid_passwd = Invalid login.";
				$cf[]="cgi_message_hu_invalid_passwd = Érvénytelen bejelentkezés.";
				$cf[]="# User hasn't set his/her password yet.";
				$cf[]="cgi_message_en_no_passwd = Please set your password!";
				$cf[]="cgi_message_hu_no_passwd = Ne felejtse el beállítani a jelszavát!";
				$cf[]="# Invalid login, user tries to play god";
				$cf[]="cgi_message_en_tricky_user = Invalid login.";
				$cf[]="cgi_message_hu_tricky_user = Érvénytelen bejelentkezés.";
				$cf[]="# Admin specified an unknown email address";
				$cf[]="cgi_message_en_email_not_exists = {\$email} address does not exists.";
				$cf[]="cgi_message_hu_email_not_exists = {\$email} E-mail cím nem létezik.";
				$cf[]="# Whitelist address checking: E-mail address pattern invalid";
				$cf[]="cgi_message_en_bad_pattern = Invalid E-mail address pattern.";
				$cf[]="cgi_message_hu_bad_pattern = Érvénytelen E-mail cím minta!";
				$cf[]="# Mistyped password";
				$cf[]="cgi_message_en_bad_passwd = Mistyped password.";
				$cf[]="cgi_message_hu_bad_passwd = Elírt jelszó!";
				$cf[]="# Weak password";
				$cf[]="cgi_message_en_weak_passwd = Weak password.";
				$cf[]="cgi_message_hu_weak_passwd = Gyenge jelszó!";
				$cf[]="# Alternate addresses: E-mail address is invalid";
				$cf[]="cgi_message_en_bad_address = Invalid E-mail address.";
				$cf[]="cgi_message_hu_bad_address = Érvénytelen E-mail cím!";
				$cf[]="# Token has been posted to the alternate address for verification.";
				$cf[]="cgi_message_en_token_sent = The key has been posted to {\$alternate_address}.";
				$cf[]="cgi_message_hu_token_sent = A kulcsot postáztam a {\$alternate_address} címre.";
				$cf[]="# Invalid token: what user typed in does not match with the token we";
				$cf[]="# sent to the alternate address";
				$cf[]="cgi_message_en_invalid_token = Invalid token.";
				$cf[]="cgi_message_hu_invalid_token = Érvénytelen kulcs!";
				$cf[]="# Virtual addresses can be created from the master address only.";
				$cf[]="cgi_message_en_master_only = Only master address may have virtual addresses";
				$cf[]="cgi_message_hu_master_only = Csak a fõ E-mail címéhez definiálhat virtuális E-mail címeket.";
				$cf[]="# Captcha-related error messages:";
				$cf[]="# No such captcha";
				$cf[]="cgi_message_en_captcha_not_exists = Captcha does not exists.";
				$cf[]="cgi_message_hu_captcha_not_exists = A captcha feladat nem létezik.";
				$cf[]="# Captcha timed out";
				$cf[]="cgi_message_en_captcha_timed_out = Captcha timed out.";
				$cf[]="cgi_message_hu_captcha_timed_out = A captcha feladat már lejárt.";
				$cf[]="# Too much probes";
				$cf[]="cgi_message_en_captcha_probes_exhausted = Captcha probes exhausted.";
				$cf[]="cgi_message_hu_captcha_probes_exhausted = Túl sok próbálkozás.";
				$cf[]="# No match";
				$cf[]="cgi_message_en_captcha_no_match = {\$probes ? \"Captcha does not match, try again. You may have \$probes another probes.\" : \"Sorry, you failed to pass our captcha challenge.\"} ";
				$cf[]="cgi_message_hu_captcha_no_match = {\$probes ? \"Nem jó megoldás, kérem próbálkozzon újra. Még \$probes kísérletet tehet.\" : \"Sajnos nem sikerült megoldania a captcha feladatokat.\"}";
				$cf[]="";
				$cf[]="# Too slow";
				$cf[]="cgi_message_en_captcha_too_slow = You are too slow, try again.";
				$cf[]="cgi_message_hu_captcha_too_slow = Túlságosan lassú volt, kérem próbálja meg újra.";
				$cf[]="# Labels used in the forms";
				$cf[]="# On and off";
				$cf[]="cgi_label_en_on = enable";
				$cf[]="cgi_label_hu_on = bekapcsolom";
				$cf[]="cgi_label_en_off = disable";
				$cf[]="cgi_label_hu_off = kikapcsolom";
				$cf[]="# Add to list and delete from list";
				$cf[]="cgi_label_en_add = add to list";
				$cf[]="cgi_label_hu_add = hozzáadom";
				$cf[]="cgi_label_en_del = delete from list";
				$cf[]="cgi_label_hu_del = törlöm";
				$cf[]="";
				$cf[]="# Classes which are offered to the user to choose from";
				$cf[]="# in novice mode. The order determines how the classes ";
				$cf[]="# are listed on the CGI interface in novice mode.";
				$cf[]="# CHANGE ME";
				$cf[]="cgi_novice_classes = none minimal medium full expert slave ";
				$cf[]="	  closed really_closed content_filter";
				$cf[]="";
				$cf[]="# Default class when changing from expert to novice";
				$cf[]="cgi_default_novice_class = none";
				$cf[]="";
				$cf[]="# Class descriptions on the CGI interface for all";
				$cf[]="# classes from cgi_novice_classes";
				$cf[]="cgi_label_class_en_none = No filtering at all";
				$cf[]="cgi_label_class_hu_none = Nincs semmilyen szûrés bekapcsolva";
				$cf[]="cgi_label_class_en_minimal = Minimal filtering";
				$cf[]="cgi_label_class_hu_minimal = Minimális szûrés";
				$cf[]="cgi_label_class_en_medium = Medium filtering";
				$cf[]="cgi_label_class_hu_medium = Közepes szûrés";
				$cf[]="cgi_label_class_en_full = All filtering settings enabled";
				$cf[]="cgi_label_class_hu_full = Minden szûrési lehetõség bekapcsolása";
				$cf[]="cgi_label_class_en_expert = Personal tunings of the settings";
				$cf[]="cgi_label_class_hu_expert = A szûrési lehetõségek egyéni beállítása";
				$cf[]="cgi_label_class_en_slave = Clone the settings of {\$email}";
				$cf[]="cgi_label_class_hu_slave = {\$email} cím beállításai legyenek érvényesek";
				$cf[]="cgi_label_class_en_closed = Allow posting from my whitelist only but";
				$cf[]="	human senders can be added to my whitelist after they";
				$cf[]="	passed a so called captcha test";
				$cf[]="cgi_label_class_hu_closed = Csak a kivétellistámról fogadok el levelet, de";
				$cf[]="	arra ismeretlenek egy";
				$cf[]="	ún. captcha teszt teljesítése után fölkerülhetnek";
				$cf[]="cgi_label_class_en_really_closed = Allow posting from my whitelist only";
				$cf[]="cgi_label_class_hu_really_closed = Csak a kivétellistámról fogadok el levelet";
				$cf[]="cgi_label_class_en_content_filter = Flag only the messages which seems to be spam";
				$cf[]="cgi_label_class_hu_content_filter = Csak jelölje meg a rendszer a leveleket,";
				$cf[]="	amelyeket spam-nak tekint";
				$cf[]="";
				$cf[]="# These policies will be offered to the users in expert mode ";
				$cf[]="# to select from and the order here determines how the policies ";
				$cf[]="# are listed on the CGI interface and stored in the database.";
				$cf[]="# CHANGE ME";
				$cf[]="cgi_expert_policies = ";
				$cf[]="	spamtrap";
				$cf[]="	dha";
				$cf[]="	blacklist";
				$cf[]="	greylist";
				$cf[]="	non_fqdn_helo";
				$cf[]="	ordb dsbl spamhaus opm cbl ";
				$cf[]="	unknown_client";
				$cf[]="	unknown_helo";
				$cf[]="	auto_whitelist";
				$cf[]="	report";
				$cf[]="	content_filter";
				$cf[]="";
				$cf[]="# Support marking by the users in general or not (1/0)";
				$cf[]="cgi_support_mark = 0";
				$cf[]="";
				$cf[]="# Expert policies offered to the users in expert mode without";
				$cf[]="# mark support:";
				$cf[]="cgi_expert_policies_without_mark = report content_filter";
				$cf[]="";
				$cf[]="# Default expert policies when changing from novice to expert";
				$cf[]="# *and* we cannot figure out the policies to enable from ";
				$cf[]="# the novice setting (like slave case)";
				$cf[]="cgi_default_expert_policies = report";
				$cf[]="";
				$cf[]="# The head, description and select definitions for all policies";
				$cf[]="# from cgi_expert_policies:";
				$cf[]="";
				$cf[]="# report";
				$cf[]="cgi_label_policy_head_en_report = Daily summary";
				$cf[]="cgi_label_policy_desc_en_report =";
				$cf[]="	The Postfilter system can generate daily summaries of the filtered";
				$cf[]="	out messages, which helps to discover accidentally filtered out real ";
				$cf[]="	partners.";
				$cf[]="cgi_label_policy_select_en_report = Sending daily summary";
				$cf[]="cgi_label_policy_head_hu_report = Napi összesítõ";
				$cf[]="cgi_label_policy_desc_hu_report =";
				$cf[]="	A rendszer bármely szûrõfeltétel miatt visszautasított levelekrõl";
				$cf[]="	napi összesítõt tud készíteni, amely alapján a véletlenül kitiltott partnerek";
				$cf[]="	könnyen felfedezhetõk és kivétellistára tehetõk.";
				$cf[]="cgi_label_policy_select_hu_report = A napi összesítõ elküldését";
				$cf[]="# content_filter";
				$cf[]="cgi_label_policy_head_en_content_filter = Flagging spam by content filtering";
				$cf[]="cgi_label_policy_desc_en_content_filter =";
				$cf[]="	Use a content filtering engine and flag the messages";
				$cf[]="	which seems to be spam";
				$cf[]="cgi_label_policy_select_en_content_filter = Flagging spam";
				$cf[]="cgi_label_policy_head_hu_content_filter = Spam megjelölés tartalomelemzéssel";
				$cf[]="cgi_label_policy_desc_hu_content_filter =";
				$cf[]="	Tartalomelemzés alapján a rendszer jelölje meg a spam-nak tekintett leveleket";
				$cf[]="cgi_label_policy_select_hu_content_filter = A spam megjelölést";
				$cf[]="# spamtrap";
				$cf[]="cgi_label_policy_head_en_spamtrap = Spamtrap";
				$cf[]="cgi_label_policy_desc_en_spamtrap =";
				$cf[]="	E-mail sender machines which want to send an E-mail to our honeypot";
				$cf[]="	addresses are automatically put into a blacklist database. Because";
				$cf[]="	the honeypot addresses are hidden on our public WWW server, only E-mail";
				$cf[]="	harvester programs run by spammers or their supporters can easily discover them.";
				$cf[]="	The machines put into the database are automatically removed after a predefined";
				$cf[]="	time, so later they can send E-mail again.<p>";
				$cf[]="        The content of the spamtrap database can be viewed: ";
				$cf[]="        {dump_url('spamtrap', 'spamtrap database')}";
				$cf[]="cgi_label_policy_select_en_spamtrap = Use of spamtrap database";
				$cf[]="cgi_label_policy_head_hu_spamtrap = Spammer csapda";
				$cf[]="cgi_label_policy_desc_hu_spamtrap =";
				$cf[]="	A webszerverünkön elrejtett";
				$cf[]="	érvénytelen E-mail címre levelet küldõk automatikusan egy adatbázisba";
				$cf[]="	kerülnek. Az E-mail cím rejtettségénél fogva csak a spammerek által használt ";
				$cf[]="	automatikus E-mail gyûjtõ programokon keresztül juthat bárki kezébe. ";
				$cf[]="	Ha az adott géprõl legalább hét napon keresztül nem érkezik újabb levél, ";
				$cf[]="	az IP címet az adatbázisból automatikusan töröljük.<p>";
				$cf[]="        A spamtrap adatbázis jelenlegi tartalma megtekinthetõ:";
				$cf[]="        {dump_url('spamtrap', 'spamtrap adatbázis')}";
				$cf[]="cgi_label_policy_select_hu_spamtrap = A spammer csapda használatát";
				$cf[]="# DHA";
				$cf[]="cgi_label_policy_head_en_dha = DHA database";
				$cf[]="cgi_label_policy_desc_en_dha =";
				$cf[]="        DHA attackers (Directory Harvest Attack) tries to collect";
				$cf[]="        our E-mail addresses by brute-force probing and then sells";
				$cf[]="        the collected valid addresses to spammers.";
				$cf[]="        Such attackers are collected in the";
				$cf[]="        {dump_url('dha', 'DHA database')} and removed afer a predefined time.";
				$cf[]="cgi_label_policy_select_en_dha = Use of DHA database";
				$cf[]="cgi_label_policy_head_hu_dha = DHA támadók adatbázisa";
				$cf[]="cgi_label_policy_desc_hu_dha =";
				$cf[]="        DHA (Directory Harvest Attack) támadók nyers próbálgatással próbálják";
				$cf[]="        begyûjteni az érvényes E-mail címeinket, majd továbbadják az spammereknek.";
				$cf[]="        Az ilyen támadókat a";
				$cf[]="        {dump_url('dha', 'DHA adatbázisba')}";
				$cf[]="        gyûjtük, majd egy idõ után automatikusan töröljük õket.";
				$cf[]="cgi_label_policy_select_hu_dha = A DHA adatbázis használatát";
				$cf[]="# auto_whitelist";
				$cf[]="cgi_label_policy_head_en_auto_whitelist = Automatic whitelist";
				$cf[]="cgi_label_policy_desc_en_auto_whitelist =";
				$cf[]="	If you enable this option, then when you send an E-mail, your";
				$cf[]="	recipients will be put onto your personal whitelist automatically.<p>";
				$cf[]="	Please note, mailing list servers tend to send the messages";
				$cf[]="	from E-mail addresses like 'listname-bounce@listserver' instead";
				$cf[]=" 	of the address 'listname@listserver' what you use when sending";
				$cf[]="	a message to the list. Also, monthly reminders and other administrative";
				$cf[]="	messages may be sent to you from addresses like ";
				$cf[]="	'listname-admin@listserver'";
				$cf[]="cgi_label_policy_select_en_auto_whitelist = Automatic whitelisting of my recipients";
				$cf[]="cgi_label_policy_head_hu_auto_whitelist = Automatikus fehér lista";
				$cf[]="cgi_label_policy_desc_hu_auto_whitelist =";
				$cf[]="	Ha bekapcsolja ezt a feltételt, akkor amikor E-mail üzenetet";
				$cf[]="	küld valakinek, a címzettje automatikusan felkerül az egyéni";
				$cf[]="	kivétellistájára.<p>";
				$cf[]="	Kérjük ügyeljen rá, hogy a levelezõ listák üzenetei általában";
				$cf[]="	a 'listanev-bounce@listaszerver' címrõl érkeznek, és nem a lista";
				$cf[]="	'listanev@listaszerver' címérõl. Hasonló módon, a havi ";
				$cf[]="	emlékeztetõk és más adminisztratív üzenetek általában a";
				$cf[]="	listanev-admin@listaszerver' címrõl érkeznek.";
				$cf[]="cgi_label_policy_select_hu_auto_whitelist = A címzettjeim automatikus fehér listázást";
				$cf[]="# blacklist: CHANGE ME";
				$cf[]="cgi_label_policy_head_en_blacklist = Local blacklist";
				$cf[]="cgi_label_policy_desc_en_blacklist =";
				$cf[]="	The IT division of our site maintains a blacklist of the senders";
				$cf[]="	which abused our mail service and was reported by the users";
				$cf[]="	at the address <a href=\"mailto:abuse@your.domain\">abuse@your.domain</a>.";
				$cf[]="cgi_label_policy_select_en_blacklist = Use of blacklist database";
				$cf[]="cgi_label_policy_head_hu_blacklist = Lokális tiltólista";
				$cf[]="# blacklist: CHANGE ME";
				$cf[]="cgi_label_policy_desc_hu_blacklist =";
				$cf[]="	Fenntartunk egy lokális tiltólistát azon gépekrõl és domainekrõl,";
				$cf[]="	amelyek spam-okat küldtek és felhasználóink jelezték az a";
				$cf[]="	<a href=\"mailto:abuse@your.domain\">abuse@your.domain</a> címen.";
				$cf[]="cgi_label_policy_select_hu_blacklist = A lokális tiltólista használatát";
				$cf[]="# greylist";
				$cf[]="cgi_label_policy_head_en_greylist = Greylisting";
				$cf[]="cgi_label_policy_desc_en_greylist =";
				$cf[]="	Greylisting is an technique where senders haven't seen yet";
				$cf[]="	are forced to stop and send the E-mail to you a little bit";
				$cf[]="	later. This simple method is extremely effective in";
				$cf[]="	blocking spam and still letting in legitimate E-mail messages.";
				$cf[]="cgi_label_policy_select_en_greylist = Use of greylisting";
				$cf[]="cgi_label_policy_head_hu_greylist = Szürke lista (greylisting)";
				$cf[]="cgi_label_policy_desc_hu_greylist =";
				$cf[]="	A szürke lista egy igen hatékony módszer a spam üzenetek";
				$cf[]="	kiszûrésére: eddig még nem látott levélüldõktõl nem";
				$cf[]="	azonnal fogadjuk el a levelét, hanem csak akkor, ha a";
				$cf[]="	levelezõ szerverük azt kicsit";
				$cf[]="	késõbb újra elküldi. A szürke lista valódi levélküldõknél";
				$cf[]="	csupán kis késleltetést jelent, miközben a spam-ok igen";
				$cf[]="	magas százalékát képes kiszûrni.";
				$cf[]="cgi_label_policy_select_hu_greylist = A szürke lista használatát";
				$cf[]="# non fqdn hello";
				$cf[]="cgi_label_policy_head_en_non_fqdn_helo = Invalid sender mailname";
				$cf[]="cgi_label_policy_desc_en_non_fqdn_helo =";
				$cf[]="	The filtering is based on the announced name of the sender mail server";
				$cf[]="	(HELO/EHLO name), which should syntactically be correct.";
				$cf[]="	Open-relay servers tend to have a badly configured mail system and the";
				$cf[]="	spam sent via such systems can be filtered out by this condition.<br>";
				$cf[]="	Unfortunately there are legitimate mail servers with bad configuration";
				$cf[]="	as well, so please check your daily report on filtered out messages";
				$cf[]="	and tune your settings/whitelist if your parners got blocked.";
				$cf[]="cgi_label_policy_select_en_non_fqdn_helo = Filtering based on invalid sender mailname";
				$cf[]="cgi_label_policy_head_hu_non_fqdn_helo = Levelezõ szerver neve nem szabványos";
				$cf[]="cgi_label_policy_desc_hu_non_fqdn_helo =";
				$cf[]="	A feladó gép mint levelezõ szerver nevének (HELO/EHLO név) szintaktikai ";
				$cf[]="	ellenõrzésén alapuló szûrés.<br>";
				$cf[]="	Bekapcsolásával a rosszul konfigurált ";
				$cf[]="	open-relay-ekrõl érkezõ spam-ok jól kiszûrhetõek, de egyúttal a rendszer ";
				$cf[]="	a gondatlanul konfigurált, spam-ot nem küldõ szerverekrõl érkezõ ";
				$cf[]="	érvényes leveleinket is eldobhatja. A szûrésbe beesõ partnereinket";
				$cf[]="	kivétellistára véve a szintaktikai ellenõrzés hatékony fegyver a spam-ok";
				$cf[]="	ellen.";
				$cf[]="cgi_label_policy_select_hu_non_fqdn_helo = A levelezõ szerver neve szabványosságán alapuló szûrést";
				$cf[]="# DNS";
				$cf[]="cgi_label_policy_head_en_unknown_client = Sender hostname DNS checking";
				$cf[]="cgi_label_policy_desc_en_unknown_client =";
				$cf[]="	Very high fraction of the spams are sent by machines with missing/incorrect";
				$cf[]="	DNS settings, which thus could be filtered out. However, there are legitimate";
				$cf[]="	senders with bad DNS settings, so valid messages can be filtered out by";
				$cf[]="	enabling this condition. If DNS checking is too strong for you, do not enable";
				$cf[]="	it or better tune your personal whitelist.";
				$cf[]="	<p>";
				$cf[]="	E-mail messages filtered out due to the sender hostname DNS checking condition";
				$cf[]="	are refused by a temporary error. That means the sender machine will retry to";
				$cf[]="	post the message for 3-7 days. If your messages get blocked due to this setting";
				$cf[]="	and you disable it or whitelist the sender, there is a very good chance that";
				$cf[]="	your message will be delivered without asking the sender to resend it again.";
				$cf[]="cgi_label_policy_select_en_unknown_client = Filtering based on hostname DNS checking";
				$cf[]="cgi_label_policy_head_hu_unknown_client = Névbejegyzés (DNS) nem szabványos";
				$cf[]="cgi_label_policy_desc_hu_unknown_client =";
				$cf[]="	A spam-ok igen nagy részét hibásan vagy rosszul bejegyzett nevû/címû gépekrõl ";
				$cf[]="	küldik. Sajnos a névhelyességen alapuló szûrés rosszul konfigurált, \"ártatlan\" ";
				$cf[]="	gépekrõl jövõ leveleket is kiszûrhet, de ezen a kivétel-listák használatával";
				$cf[]="	segíteni tudunk.";
				$cf[]="	<p>";
				$cf[]="	A névhelyességen alapuló szûrések során a rosszul bejegyzett géptõl jövõ";
				$cf[]="	levelet <b>ideiglenesen</b> utasítjuk vissza, azaz a levél a <b>küldõ</b> gépnél";
				$cf[]="	marad (általában 3-7 napig), és a küldõ gép újab kísérleteket fog tenni";
				$cf[]="	a levél kézbesítésére.  Ha a feladó E-mail címét az egyéni kivétel-listára felvesszük ";
				$cf[]="	(vagy a küldõ gép rendszergazdája a névbejegyzést az adott idõn belül kijavítja),";
				$cf[]="	akkor a visszautasított levelet megkapjuk anélkül, hogy a";
				$cf[]="	levelet a feladónak kérésünkre újra el kellene küldenie.";
				$cf[]="	<p>";
				$cf[]="	A feladó gép névhelyességének az ellenõrzése a levelezõ szerverünkkel ";
				$cf[]="	közvetlenül kapcsolatba kerülõ gépre vonatkozik.";
				$cf[]="cgi_label_policy_select_hu_unknown_client = A feladó gép DNS-beli ellenõrzésén alapuló szûrést";
				$cf[]="# unknown helo";
				$cf[]="cgi_label_policy_head_en_unknown_helo = Sender mailname DNS checking";
				$cf[]="cgi_label_policy_desc_en_unknown_helo =";
				$cf[]="	Using this condition, we enable the DNS checking of the announced";
				$cf[]="	mailname (HELO/EHLO name) of the sender machine.<br>";
				$cf[]="	Please read the comments at the hostname DNS checking condition, which";
				$cf[]="	is valid for this kind of DNS checking as well.";
				$cf[]="cgi_label_policy_select_en_unknown_helo = Filtering based on sender mailname DNS checking";
				$cf[]="cgi_label_policy_head_hu_unknown_helo = A levelezõ szerver névbejegyzése (DNS) nem szabványos";
				$cf[]="cgi_label_policy_desc_hu_unknown_helo =";
				$cf[]="	A névhelyesség-ellenõrzés a levelezõ szerverünkkel közvetlenül kommunikáló";
				$cf[]="	gépnek mint levelezõ rendszernek a nevére (HELO/EHLO név) vonatkozik.";
				$cf[]="	Ugyan azok a megjegyzések vonatkoznak rá, mint az elõzõ névhelyesség";
				$cf[]="	ellenõrzésre. A gyakorlatban csak a szintaktikai ellenõrzéssel ";
				$cf[]="	együtt van értelme bekapcsolni. Igen erõs és sok hamis szûrést eredményezõ";
				$cf[]="	feltétel.";
				$cf[]="cgi_label_policy_select_hu_unknown_helo = A feladó gép mint levelezõ-rendszer DNS-beli ellenõrzésén alapuló szûrést";
				$cf[]="# ordb";
				$cf[]="cgi_label_policy_head_en_ordb = ORDB (Open Relay Database)";
				$cf[]="cgi_label_policy_desc_en_ordb =";
				$cf[]="	<a href=\"http://relays.ordb.org/\">ORDB (Open Relay Database)</a>";
				$cf[]="	is a database of verified open relay servers maintained by a non-profit ";
				$cf[]="	organization. Open relay server are found by spammers very fast and then ";
				$cf[]="	they use them to relay spam for them.";
				$cf[]="cgi_label_policy_select_en_ordb = Filtering based on ORDB";
				$cf[]="cgi_label_policy_head_hu_ordb = ORDB (Open Relay Database) adatbázis";
				$cf[]="cgi_label_policy_desc_hu_ordb =";
				$cf[]="	Az <a href=\"http://relays.ordb.org/\">ORDB (Open Relay Database)</a> adatbázis ";
				$cf[]="	egy non-profit szervezet által karbantartott adatbázis az ún open relay";
				$cf[]="	levelezõ szerverekrõl. Az open relay szervereket a spammerek használják leveleik";
				$cf[]="	tömeges kézbesítése és nyomaik eltüntetése végett.";
				$cf[]="cgi_label_policy_select_hu_ordb = Az ORDB adatbázis alapján való szûrést";
				$cf[]="# dsbl";
				$cf[]="cgi_label_policy_head_en_dsbl = DSBL (Distributed Server Boycott List)";
				$cf[]="cgi_label_policy_desc_en_dsbl =";
				$cf[]="	<a href=\"http://dsbl.org/main\">DSBL (Distributed Server Boycott List)</a> is";
				$cf[]="	another database of open relay and open proxy servers.";
				$cf[]="cgi_label_policy_select_en_dsbl = Filtering based on DSBL";
				$cf[]="cgi_label_policy_head_hu_dsbl = DSBL (Distributed Server Boycott List) adatbázis";
				$cf[]="cgi_label_policy_desc_hu_dsbl =";
				$cf[]="	A <a href=\"http://dsbl.org/main\">DSBL (Distributed Server Boycott List)</a> adatbázis";
				$cf[]="	egy másik listája az open relay és open proxy szervereknek.";
				$cf[]="cgi_label_policy_select_hu_dsbl = A DSBL adatbázis alapján való szûrést";
				$cf[]="# spamhaus";
				$cf[]="cgi_label_policy_head_en_spamhaus = Spamhaus database";
				$cf[]="cgi_label_policy_desc_en_spamhaus =";
				$cf[]="	The <a href=\"http://www.spamhaus.org\">Spamhaus database</a>";
				$cf[]="	is a list of spammers and active supporters of spammers.";
				$cf[]="cgi_label_policy_select_en_spamhaus = Filtering based on Spamhaus database";
				$cf[]="cgi_label_policy_head_hu_spamhaus = Spamhaus adatbázis";
				$cf[]="cgi_label_policy_desc_hu_spamhaus =";
				$cf[]="	A <a href=\"http://www.spamhaus.org\">Spamhaus adatbázis</a>";
				$cf[]="	a spammerek és spam-ot aktívan támogatók listáját tartalmazza.";
				$cf[]="cgi_label_policy_select_hu_spamhaus = A Spamhaus adatbázis alapján való szûrést";
				$cf[]="# opm";
				$cf[]="cgi_label_policy_head_en_opm = Blitzed OPM (Open Proxies Monitor List) database";
				$cf[]="cgi_label_policy_desc_en_opm =";
				$cf[]="	The <a href=\"http://opm.blitzed.org/\">Blitzed OPM (Open Proxies Monitor List) database</a>";
				$cf[]="	contains open proxy servers.";
				$cf[]="cgi_label_policy_select_en_opm = Filtering based on Blitzed OPM";
				$cf[]="cgi_label_policy_head_hu_opm = Blitzed OPM (Open Proxies Monitor List) adatbázis";
				$cf[]="cgi_label_policy_desc_hu_opm =";
				$cf[]="	A  <a href=\"http://opm.blitzed.org/\">Blitzed OPM (Open Proxies Monitor List) adatbázis</a>";
				$cf[]="	az open relay-ként használható proxy szerverek listáját tartalmazza.";
				$cf[]="cgi_label_policy_select_hu_opm = A Blitzed OPM adatbázis alapján való szûrést";
				$cf[]="# cbl";
				$cf[]="cgi_label_policy_head_en_cbl = CBS (Composite Blocking List) database";
				$cf[]="cgi_label_policy_desc_en_cbl =";
				$cf[]="	The <a href=\"http://cbl.abuseat.org\">CBS (Composite Blocking List)</a> database";
				$cf[]="	contains machines trapped by spamtraps.";
				$cf[]="cgi_label_policy_select_en_cbl = Filtering based on CBS";
				$cf[]="cgi_label_policy_head_hu_cbl = CBS (Composite Blocking List) adatbázis";
				$cf[]="cgi_label_policy_desc_hu_cbl =";
				$cf[]="	A <a href=\"http://cbl.abuseat.org\">CBS (Composite Blocking List)</a> adatbázisba";
				$cf[]="	a gépek IP címei spamcsapdákon keresztül kerülnek be.";
				$cf[]="cgi_label_policy_select_hu_cbl = A CBS adatbázis alapján való szûrést";
				$cf[]="";
				$cf[]="#";
				$cf[]="# Report";
				$cf[]="#";
				$cf[]="# Which host(s) should be queried to generate";
				$cf[]="# the report";
				$cf[]="# report_mysql_servers = your.mysql.server 	   # centralized setup";
				$cf[]="# report_mysql_servers = smtp.server0 smtp.server1 # distributed setup";
				$cf[]="# CHANGE ME";
				$cf[]="report_mysql_servers = your.mysql.server";
				$cf[]="# Command by which the reports can be posted";
				$cf[]="report_sendmail = /usr/lib/sendmail -t";
				$cf[]="# Which policy triggers reporting";
				$cf[]="report_policy = report";
				$cf[]="# Default reporting language from cgi_languages";
				$cf[]="report_default_lang = hu";
				$cf[]="# Overwrite old report tables: 'daily', 'weekly' or 'monthly'";
				$cf[]="# (i.e. keep one, seven or 30 days of report tables)";
				$cf[]="report_overwrite = daily";
				$cf[]="# Create statistics: up to this number of top senders/etc listed";
				$cf[]="report_statistics = 50";
				$cf[]="# Headers in E-mail templates:";
				$cf[]="report_message_en_address = Recipient E-mail address: ";
				$cf[]="report_message_hu_address = Cimzett E-mail cime: ";
				$cf[]="report_message_en_class = Recipient filtering setting: ";
				$cf[]="report_message_hu_class = Cimzett szuresi beallitasa: ";
				$cf[]="report_message_en_policy = Recipient filtering condition: ";
				$cf[]="report_message_hu_policy = Cimzett szuresi feltetele: ";
				$cf[]="report_message_en_date = Date";
				$cf[]="report_message_hu_date = Datum";
				$cf[]="report_message_en_sender = Sender E-mail address";
				$cf[]="report_message_hu_sender = Felado E-mail cime";
				$cf[]="report_message_en_client = Sender machine";
				$cf[]="report_message_hu_client = Levelkuldo gep";
				$cf[]="";
				$cf[]="# eof";	
				@file_put_contents("/etc/postfilter/main.cf",@implode("\n",$cf));
				shell_exec("/usr/share/postfilter/sbin/pfadm upload config");
				echo "Starting......: ".date("H:i:s")." PostFilter building main.cf ok\n";	
	}
	
	

?>